from typing import Any, List, Optional

class BERException(Exception): ...

class BER:
    content: bytes
    idx: int
    def __init__(self, content: bytes = ...) -> None: ...
    def asbytes(self) -> bytes: ...
    def decode(self) -> Any: ...
    def decode_next(self) -> Optional[Any]: ...
    @staticmethod
    def decode_sequence(data: bytes) -> List[Any]: ...
    def encode_tlv(self, ident: int, val: Any) -> None: ...
    def encode(self, x: Any) -> None: ...
    @staticmethod
    def encode_sequence(data: Any) -> bytes: ...
