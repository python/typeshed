# Stubs for sqlalchemy.dialects.postgresql.pygresql (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from ...types import Numeric as Numeric
from ...types import JSON as Json
from ...sql.elements import Null as Null
from .base import PGDialect as PGDialect, PGCompiler as PGCompiler, PGIdentifierPreparer as PGIdentifierPreparer, UUID as UUID
from .hstore import HSTORE as HSTORE
from .json import JSON as JSON, JSONB as JSONB

class _PGNumeric(Numeric):
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class _PGHStore(HSTORE):
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class _PGJSON(JSON):
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class _PGJSONB(JSONB):
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class _PGUUID(UUID):
    def bind_processor(self, dialect): ...
    def result_processor(self, dialect, coltype): ...

class _PGCompiler(PGCompiler):
    def visit_mod_binary(self, binary, operator, **kw): ...
    def post_process_text(self, text): ...

class _PGIdentifierPreparer(PGIdentifierPreparer): ...

class PGDialect_pygresql(PGDialect):
    driver = ...  # type: str
    statement_compiler = ...  # type: Any
    preparer = ...  # type: Any
    @classmethod
    def dbapi(cls): ...
    colspecs = ...  # type: Any
    dbapi_version = ...  # type: Any
    supports_unicode_statements = ...  # type: bool
    supports_unicode_binds = ...  # type: bool
    has_native_hstore = ...  # type: Any
    has_native_json = ...  # type: Any
    has_native_uuid = ...  # type: Any
    def __init__(self, **kwargs) -> None: ...
    def create_connect_args(self, url): ...
    def is_disconnect(self, e, connection, cursor): ...

dialect = ...  # type: Any
