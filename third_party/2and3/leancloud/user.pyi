from typing import Any, Dict

import leancloud
from leancloud.object_ import Object
from leancloud.query import Query


class User(Object): 

    def get_session_token(self) -> str:...

    @classmethod
    def create_follower_query(cls, user_id: str) -> Query:...

    @classmethod
    def create_followee_query(cls, user_id: str) -> Query:...

    @classmethod
    def get_current(cls) -> User:...

    @classmethod    
    def become(cls, session_token: str) -> User:...

    @property
    def is_current(self) -> bool:...

    # overrides Object.save() 
    def save(self, make_current=False) -> None:...

    def sign_up(self, username: str=None, password: str=None) -> None:...

    def login(self, username: str=None, password: str=None) -> None:...

    def logout(self) -> None:...

    @classmethod
    def login_with_mobile_phone(cls, phone_number: str, password: str) -> User: ...

    def follow(self, target_id: str) -> None:...

    def unfollow(self, target_id: str) -> None:...

    @classmethod
    def login_with(cls, platform: str, third_party_auth_data: Dict) -> User:...

    def link_with(self, provider: str, third_party_auth_data: Dict) -> User:...

    def unlink_from(self, provider: str) -> User:...

    def is_linked(self, provider: str) -> bool:...

    @classmethod
    def signup_or_login_with_mobile_phone(cls, phone_number: str, sms_code: str) -> User:...

    def update_password(self, old_password: str, new_password: str) -> None:...

    def get_username(self) -> str:...

    def get_mobile_phone_number(self) -> str:...

    def set_mobile_phone_number(self, phone_number: str) -> User:...

    def set_username(self, username: str) -> User:...

    def set_password(self, password: str) -> User:...

    def set_email(self, email: str) -> User:...

    def get_email(self) -> User:...

    @classmethod
    def request_password_reset(self, email: str) -> None:...

    @classmethod
    def request_email_verify(self, email: str) -> None:...

    @classmethod
    def request_mobile_phone_verify(cls, phone_number: str) -> None:...

    @classmethod
    def request_password_reset_by_sms_code(cls, phone_number: str) -> None:...

    @classmethod
    def reset_password_by_sms_code(cls, phone_number, new_password) -> None:...

    @classmethod
    def request_login_sms_code(cls, phone_number: str) -> None:...
