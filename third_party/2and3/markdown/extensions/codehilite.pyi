from . import Extension
from ..treeprocessors import Treeprocessor
from typing import Any, Optional

pygments: bool

def parse_hl_lines(expr: Any): ...

class CodeHilite:
    src: Any = ...
    lang: Any = ...
    linenums: Any = ...
    guess_lang: Any = ...
    css_class: Any = ...
    style: Any = ...
    noclasses: Any = ...
    tab_length: Any = ...
    hl_lines: Any = ...
    use_pygments: Any = ...
    def __init__(self, src: Optional[Any] = ..., linenums: Optional[Any] = ..., guess_lang: bool = ..., css_class: str = ..., lang: Optional[Any] = ..., style: str = ..., noclasses: bool = ..., tab_length: int = ..., hl_lines: Optional[Any] = ..., use_pygments: bool = ...) -> None: ...
    def hilite(self): ...

class HiliteTreeprocessor(Treeprocessor):
    def code_unescape(self, text: Any): ...
    def run(self, root: Any) -> None: ...

class CodeHiliteExtension(Extension):
    config: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def extendMarkdown(self, md: Any) -> None: ...

def makeExtension(**kwargs: Any): ...
