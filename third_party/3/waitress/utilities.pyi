from .rfc7230 import OBS_TEXT as OBS_TEXT, VCHAR as VCHAR
from typing import Any

logger: Any
queue_logger: Any

def find_double_newline(s: Any): ...
def concat(*args: Any): ...
def join(seq: Any, field: str = ...): ...
def group(s: Any): ...

short_days: Any
long_days: Any
short_day_reg: Any
long_day_reg: Any
daymap: Any
hms_reg: Any
months: Any
monmap: Any
months_reg: Any
rfc822_date: Any
rfc822_reg: Any

def unpack_rfc822(m: Any): ...

rfc850_date: Any
rfc850_reg: Any

def unpack_rfc850(m: Any): ...

weekdayname: Any
monthname: Any

def build_http_date(when: Any): ...
def parse_http_date(d: Any): ...
vchar_re = VCHAR
obs_text_re = OBS_TEXT
qdtext_re: Any
quoted_pair_re: Any
quoted_string_re: Any
quoted_string: Any
quoted_pair: Any

def undquote(value: Any): ...
def cleanup_unix_socket(path: Any) -> None: ...

class Error:
    code: int = ...
    reason: str = ...
    body: Any = ...
    def __init__(self, body: Any) -> None: ...
    def to_response(self): ...
    def wsgi_response(self, environ: Any, start_response: Any) -> None: ...

class BadRequest(Error):
    code: int = ...
    reason: str = ...

class RequestHeaderFieldsTooLarge(BadRequest):
    code: int = ...
    reason: str = ...

class RequestEntityTooLarge(BadRequest):
    code: int = ...
    reason: str = ...

class InternalServerError(Error):
    code: int = ...
    reason: str = ...

class ServerNotImplemented(Error):
    code: int = ...
    reason: str = ...
