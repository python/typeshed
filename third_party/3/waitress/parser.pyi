from .rfc7230 import HEADER_FIELD
from typing import Any
from waitress.buffers import OverflowableBuffer
from waitress.compat import tostr, unquote_bytes_to_wsgi, urlparse
from waitress.receiver import ChunkedReceiver as ChunkedReceiver, FixedStreamReceiver as FixedStreamReceiver
from waitress.utilities import BadRequest as BadRequest, RequestEntityTooLarge as RequestEntityTooLarge, RequestHeaderFieldsTooLarge as RequestHeaderFieldsTooLarge, ServerNotImplemented as ServerNotImplemented, find_double_newline as find_double_newline

class ParsingError(Exception): ...
class TransferEncodingNotImplemented(Exception): ...

class HTTPRequestParser:
    completed: bool = ...
    empty: bool = ...
    expect_continue: bool = ...
    headers_finished: bool = ...
    header_plus: bytes = ...
    chunked: bool = ...
    content_length: int = ...
    header_bytes_received: int = ...
    body_bytes_received: int = ...
    body_rcv: Any = ...
    version: str = ...
    error: Any = ...
    connection_close: bool = ...
    headers: Any = ...
    adj: Any = ...
    def __init__(self, adj: Any) -> None: ...
    def received(self, data: Any): ...
    first_line: Any = ...
    command: Any = ...
    url_scheme: Any = ...
    def parse_header(self, header_plus: Any) -> None: ...
    def get_body_stream(self): ...
    def close(self) -> None: ...

def split_uri(uri: Any): ...
def get_header_lines(header: Any): ...

first_line_re: Any

def crack_first_line(line: Any): ...
