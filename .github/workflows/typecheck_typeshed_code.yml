name: Typecheck-typeshed-code

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "scripts/**"
      - "tests/**"
      - ".github/workflows/typecheck_typeshed_code.yml"
      - "requirements-tests.txt"

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  FORCE_COLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  mypy:
    name: Run mypy against the scripts and tests directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux", "win32"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements-tests.txt
      - run: pip install -r requirements-tests.txt
      - run: python ./tests/typecheck_typeshed.py --platform=${{ matrix.platform }}
  pyright:
    name: Run pyright against the scripts and tests directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-platform: ["Linux", "Windows"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: pip
          cache-dependency-path: requirements-tests.txt
      - run: pip install -r requirements-tests.txt
      - name: Get pyright version
        uses: SebRollen/toml-action@v1.0.2
        id: pyright_version
        with:
          file: "pyproject.toml"
          field: "tool.typeshed.pyright_version"
      - name: Run pyright on typeshed
        uses: jakebailey/pyright-action@v1
        with:
          version: ${{ steps.pyright_version.outputs.value }}
          python-platform: ${{ matrix.python-platform }}
          python-version: "3.9"
          project: ./pyrightconfig.scripts_and_tests.json
