name: Run stubtest on all stubs

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

# Please keep the permissions minimal, as stubtest runs arbitrary code from pypi.
permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  stubtest-stdlib:
    name: Check stdlib with stubtest
    if: github.repository == 'python/typeshed'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-11 does not have tcl/tk installed, needed for stubtesting tkinter
        os: ["ubuntu-latest", "windows-latest", "macos-10.15"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests.txt) $(grep mypy== requirements-tests.txt)
      - name: Run stubtest
        run: python tests/stubtest_stdlib.py

  stubtest-third-party:
    name: Check third party stubs with stubtest
    if: github.repository == 'python/typeshed'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard-index: [0, 1, 2, 3]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests.txt)
      - name: Install apt packages
        run: sudo apt install -y $(python tests/get_apt_packages.py)
      - name: Run stubtest
        run: python -u tests/stubtest_third_party.py --num-shards 4 --shard-index ${{ matrix.shard-index }} 2>&1 | tee output.txt
      - name: If stubtest failed, create an issue
        if: ${{ failure() }}
        permissions:
          issues: write
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let forStub = ""
            try {
              forStub = "for " + /stubtest failed for (.*)/.exec(fs.readFileSync("output.txt", "utf-8"))[1]
            } catch(e) { }

            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Stubtest failed ${forStub} on ${new Date().toDateString()}`,
              body: "Stubtest runs are listed [here](https://github.com/python/typeshed/actions/workflows/stubtest.yml)."
            })
