name: Test

on:
  workflow_dispatch:
  push:
  pull_request:

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  stubtest-stdlib:
    name: Check stdlib with stubtest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-11 does not have tcl/tk installed, needed for stubtesting tkinter
        os: ["ubuntu-latest", "windows-latest", "macos-10.15"]
        # Python 3.9 and 3.10 temporarily pinned due to incompatibilities
        # between micro versions.
        python-version: ["3.6", "3.7", "3.8", "3.9.10", "3.10.2"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests.txt) git+https://github.com/python/mypy@ee0638f3c3b68f5970cf8c2c643156c370017ee4
      - name: Run stubtest
        run: python tests/stubtest_stdlib.py

  stubtest-third-party:
    name: Check third party stubs with stubtest
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests.txt)
      - name: Run stubtest
        run: |
          STUBS=$(
            # git diff --name-only origin/${{ github.base_ref }} HEAD |
            # Uncomment the following to (very slowly) run on all third party stubs:
            git ls-files |
            egrep ^stubs/ | cut -d "/" -f 2 | sort -u | (while read stub; do [ -d stubs/$stub ] && echo $stub || true; done)
          )
          if test -n "$STUBS"; then
            echo "Testing $STUBS..."
            APT_PACKAGES=$(python tests/get_apt_packages.py $STUBS)
            if test -n "$APT_PACKAGES"; then
              echo "Installing apt packages: $APT_PACKAGES"
              sudo apt install -y $APT_PACKAGES
            fi
            python tests/stubtest_third_party.py $STUBS
          else
            echo "Nothing to test"
          fi
