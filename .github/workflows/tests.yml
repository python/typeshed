name: Check stubs

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  file-consistency:
    name: Check file consistency
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep tomli== requirements-tests-py3.txt)
      - run: ./tests/check_consistent.py

  new-syntax:
    name: Ensure new syntax usage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: ./tests/check_new_syntax.py

  flake8:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep flake8 requirements-tests-py3.txt)
      - run: flake8

  pytype:
    name: Run pytype against the stubs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: pip install -r requirements-tests-py3.txt
      - run: ./tests/pytype_test.py

  mypy:
    name: Run mypy against the stubs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux", "win32", "darwin"]
        python-version: ["2.7", "3.6", "3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install $(grep tomli== requirements-tests-py3.txt) $(grep mypy== requirements-tests-py3.txt)
      - run: ./tests/mypy_test.py --platform=${{ matrix.platform }} --python-version=${{ matrix.python-version }}

  pyright:
    name: Run pyright against the stubs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-platform: ["Linux", "Windows", "Darwin"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    env:
      PYRIGHT_VERSION: 1.1.187 # Must match pyright_test.py.
    steps:
      - uses: actions/checkout@v2
      - uses: jakebailey/pyright-action@v1
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-platform: ${{ matrix.python-platform }}
          python-version: ${{ matrix.python-version }}
          no-comments: ${{ matrix.python-version != '3.9' || matrix.python-platform != 'Linux' }}  # Having each job create the same comment is too noisy.
          project: ./pyrightconfig.stricter.json
      - uses: jakebailey/pyright-action@v1
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-platform: ${{ matrix.python-platform }}
          python-version: ${{ matrix.python-version }}
          no-comments: ${{ matrix.python-version != '3.9' || matrix.python-platform != 'Linux' }}  # Having each job create the same comment is too noisy.

  stubtest-stdlib:
    name: Check stdlib with stubtest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        # Python 3.9.7 is required due to changes to ForwardRef.
        python-version: ["3.6", "3.7", "3.8", "3.9.7", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests-py3.txt) $(grep mypy== requirements-tests-py3.txt)
      - name: Run stubtest
        run: python tests/stubtest_stdlib.py --ignore-unused-allowlist

  stubtest-third-party:
    name: Check third party stubs with stubtest
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install $(grep tomli== requirements-tests-py3.txt)
      - name: Run stubtest
        run: |
          STUBS=$(git diff --name-only origin/${{ github.base_ref }} HEAD | egrep ^stubs/ | cut -d "/" -f 2)
          if test -n "$STUBS"; then
            echo "Testing $STUBS..."
            python tests/stubtest_third_party.py $STUBS
          else
            echo "Nothing to test"
          fi
