from collections.abc import Callable

f: float
d: float

def kite(l: int) -> None: ...
def dart(l: int) -> None: ...
def inflatekite(l: float, n: int) -> None: ...
def inflatedart(l: float, n: int) -> None: ...
def draw(l: int, n: int, th: int = 2) -> None: ...
def sun(l: int, n: int) -> None: ...
def star(l: int, n: int) -> None: ...
def makeshapes() -> None: ...
def start() -> None: ...
def test(
    l: int = 200, n: int = 4, fun: Callable[[int, int], None] = ..., startpos: tuple[int, int] = (0, 0), th: int = 2
) -> None: ...
def demo(fun: Callable[[int, int], None] = ...) -> None: ...
def main() -> str: ...
