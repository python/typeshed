# Stubs for concurrent.futures.process (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from . import _base

EXTRA_QUEUED_CALLS = ... # type: Any

class _RemoteTraceback(Exception):
    tb = ... # type: Any
    def __init__(self, tb): ...

class _ExceptionWithTraceback:
    exc = ... # type: Any
    tb = ... # type: Any
    def __init__(self, exc, tb): ...
    def __reduce__(self): ...

class _WorkItem:
    future = ... # type: Any
    fn = ... # type: Any
    args = ... # type: Any
    kwargs = ... # type: Any
    def __init__(self, future, fn, args, kwargs): ...

class _ResultItem:
    work_id = ... # type: Any
    exception = ... # type: Any
    result = ... # type: Any
    def __init__(self, work_id, exception=None, result=None): ...

class _CallItem:
    work_id = ... # type: Any
    fn = ... # type: Any
    args = ... # type: Any
    kwargs = ... # type: Any
    def __init__(self, work_id, fn, args, kwargs): ...

class BrokenProcessPool(RuntimeError): ...

class ProcessPoolExecutor(_base.Executor):
    def __init__(self, max_workers=None): ...
    def submit(self, fn, *args, **kwargs): ...
    def map(self, fn, *iterables, timeout=None, chunksize=1): ...
    def shutdown(self, wait=True): ...
