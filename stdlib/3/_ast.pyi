# Stubs for _ast (Python 3.4)

from typing import Any
from typing import Tuple as TupleType

PyCF_ONLY_AST = ... # type: int

class AST:
    _attributes = ... # type: TupleType[str]
    _fields = ... # type: TupleType[str]
    def __init__(self, *args: str, **kwargs: int) -> None: ...
    def __delattr__(self, name: str) -> None: ...
    # TODO write complete return value
    def __reduce__(self) -> Any: ...
    def __setattr__(self, name: str, value: Any) -> None: ...

class Add(operator): ...
class And(boolop): ...
class Assert(stmt): ...
class Assign(stmt): ...
class Attribute(expr): ...
class AugAssign(stmt): ...
class AugLoad(expr_context): ...
class AugStore(expr_context): ...
class BinOp(expr): ...
class BitAnd(operator): ...
class BitOr(operator): ...
class BitXor(operator): ...
class BoolOp(expr): ...
class Break(stmt): ...
class Bytes(expr): ...
class Call(expr): ...
class ClassDef(stmt): ...
class Compare(expr): ...
class Continue(stmt): ...
class Del(expr_context): ...
class Delete(stmt): ...
class Dict(expr): ...
class DictComp(expr): ...
class Div(operator): ...
class Ellipsis(expr): ...
class Eq(cmpop): ...
class ExceptHandler(excepthandler): ...
class Expr(stmt): ...
class Expression(mod): ...
class ExtSlice(slice): ...
class FloorDiv(operator): ...
class For(stmt): ...
class FunctionDef(stmt): ...
class GeneratorExp(expr): ...
class Global(stmt): ...
class Gt(cmpop): ...
class GtE(cmpop): ...
class If(stmt): ...
class IfExp(expr): ...
class Import(stmt): ...
class ImportFrom(stmt): ...
class In(cmpop): ...
class Index(slice): ...
class Interactive(mod): ...
class Invert(unaryop): ...
class Is(cmpop): ...
class IsNot(cmpop): ...
class LShift(operator): ...
class Lambda(expr): ...
class List(expr): ...
class ListComp(expr): ...
class Load(expr_context): ...
class Lt(cmpop): ...
class LtE(cmpop): ...
class Mod(operator): ...
class Module(mod): ...
class Mult(operator): ...
class Name(expr): ...
class NameConstant(expr): ...
class Nonlocal(stmt): ...
class Not(unaryop): ...
class NotEq(cmpop): ...
class NotIn(cmpop): ...
class Num(expr): ...
class Or(boolop): ...
class Param(expr_context): ...
class Pass(stmt): ...
class Pow(operator): ...
class RShift(operator): ...
class Raise(stmt): ...
class Return(stmt): ...
class Set(expr): ...
class SetComp(expr): ...
class Slice(slice): ...
class Starred(expr): ...
class Store(expr_context): ...
class Str(expr): ...
class Sub(operator): ...
class Subscript(expr): ...
class Suite(mod): ...
class Try(stmt): ...
class Tuple(expr): ...
class UAdd(unaryop): ...
class USub(unaryop): ...
class UnaryOp(expr): ...
class While(stmt): ...
class With(stmt): ...
class Yield(expr): ...
class YieldFrom(expr): ...
class alias(AST): ...
class arg(AST): ...
class arguments(AST): ...
class boolop(AST): ...
class cmpop(AST): ...
class comprehension(AST): ...
class excepthandler(AST): ...
class expr(AST): ...
class expr_context(AST): ...
class keyword(AST): ...
class mod(AST): ...
class operator(AST): ...
class slice(AST): ...
class stmt(AST): ...
class unaryop(AST): ...
class withitem(AST): ...
