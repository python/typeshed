from typing import List, Union, overload, TypeVar

_Ch = TypeVar('_Ch', str, int)

NUL: int
SOH: int
STX: int
ETX: int
EOT: int
ENQ: int
ACK: int
BEL: int
BS: int
TAB: int
HT: int
LF: int
NL: int
VT: int
FF: int
CR: int
SO: int
SI: int
DLE: int
DC1: int
DC2: int
DC3: int
DC4: int
NAK: int
SYN: int
ETB: int
CAN: int
EM: int
SUB: int
ESC: int
FS: int
GS: int
RS: int
US: int
SP: int
DEL: int

controlnames: List[int]

def isalnum(c: str) -> bool: ...
def isalpha(c: str) -> bool: ...
def isascii(c: str) -> bool: ...
def isblank(c: str) -> bool: ...
def iscntrl(c: str) -> bool: ...
def isdigit(c: str) -> bool: ...
def isgraph(c: str) -> bool: ...
def islower(c: str) -> bool: ...
def isprint(c: str) -> bool: ...
def ispunct(c: str) -> bool: ...
def isspace(c: str) -> bool: ...
def isupper(c: str) -> bool: ...
def isxdigit(c: str) -> bool: ...
def isctrl(c: str) -> bool: ...
def ismeta(c: str) -> bool: ...
def ascii(c: _Ch) -> _Ch: ...
def ctrl(c: _Ch) -> _Ch: ...
def alt(c: _Ch) -> _Ch: ...
def unctrl(c: _Ch) -> str: ...
