
from typing import Union, MutableMapping, Optional, Type, Iterator
from types import TracebackType

_KeyType = Union[str, bytes]
_ValueType = Union[str, bytes]

class error(OSError): ...

# Actual typename gdbm, not exposed by the implementation
class _gdbm(MutableMapping[_KeyType, _ValueType]):
    def firstkey(self) -> _KeyType: ...
    def nextkey(self, key: _KeyType) -> _KeyType: ...
    def reorganize(self) -> None: ...
    def sync(self) -> None: ...
    def close(self) -> None: ...
    def __getitem__(self, item: _KeyType) -> _ValueType: ...
    def __setitem__(self, key: _KeyType, value: _ValueType) -> None: ...
    def __delitem__(self, key: _KeyType) -> None: ...
    def __iter__(self) -> Iterator[_KeyType]: ...
    def __len__(self) -> int: ...
    def __enter__(self) -> _gdbm: ...
    def __exit__(self, exc_type: Optional[Type[BaseException]], exc_val: Optional[BaseException], exc_tb: Optional[TracebackType]) -> None: ...

    # Don't exist at runtime
    __new__: None  # type: ignore
    __init__: None  # type: ignore
    items: None  # type: ignore
    values: None  # type: ignore

def open(file: str, flag: str = ..., mode: int = ...) -> _gdbm: ...
