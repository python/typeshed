from _typeshed import Incomplete

from idlelib import searchengine as searchengine
from idlelib.searchbase import SearchDialogBase as SearchDialogBase

def grep(text, io: Incomplete | None = ..., flist: Incomplete | None = ...) -> None: ...
def walk_error(msg) -> None: ...
def findfiles(folder, pattern, recursive) -> None: ...

class GrepDialog(SearchDialogBase):
    def __getattr__(self, name: str) -> Incomplete: ...  # Incomplete
    title: str
    icon: str
    needwrapbutton: int
    flist: Incomplete
    globvar: Incomplete
    recvar: Incomplete
    def __init__(self, root, engine, flist) -> None: ...
    def open(self, text, searchphrase, io: Incomplete | None = ...) -> None: ...
    globent: Incomplete
    def create_entries(self) -> None: ...
    def create_other_buttons(self) -> None: ...
    def create_command_buttons(self) -> None: ...
    def default_command(self, event: Incomplete | None = ...) -> None: ...
    def grep_it(self, prog, path) -> None: ...
