from idlelib.config import idleConf as idleConf
from idlelib.pyshell import PyShellEditorWindow
from idlelib.util import py_extensions as py_extensions
from tkinter import Event, Text, filedialog
from typing import Any, Callable

encoding: str
errors: str

class IOBinding:
    editwin: PyShellEditorWindow
    text: Text
    fileencoding: str
    def __init__(self, editwin: PyShellEditorWindow) -> None: ...
    filename_change_hook: Callable[[], None] | None
    def close(self) -> None: ...
    def get_saved(self) -> bool: ...
    def set_saved(self, flag: bool | int) -> None: ...
    def reset_undo(self) -> None: ...
    def set_filename_change_hook(self, hook: Callable[[], None] | None) -> None: ...
    filename: str | None
    dirname: str | None
    def set_filename(self, filename: str | None) -> None: ...
    def open(self, event: Event[Any] | None = ..., editFile: str | None = ...) -> str: ...
    eol_convention: str
    def loadfile(self, filename: str) -> bool: ...
    def maybesave(self) -> str: ...
    def save(self, event: Event[Any] | None) -> str: ...
    def save_as(self, event: Event[Any] | None) -> str: ...
    def save_a_copy(self, event: Event[Any] | None) -> str: ...
    def writefile(self, filename: str) -> bool: ...
    def fixnewlines(self) -> str: ...
    def encode(self, chars: bytes | str) -> bytes: ...
    def print_window(self, event: Event[Any]) -> str: ...
    opendialog: filedialog.Open | None
    savedialog: filedialog.SaveAs | None
    filetypes: tuple[tuple[str, str, str], tuple[str, str, str], tuple[str, str]]
    defaultextension: str
    def askopenfile(self) -> str: ...
    def defaultfilename(self, mode: str = ...) -> tuple[str, str]: ...
    def asksavefile(self) -> str: ...
    def updaterecentfileslist(self, filename: str) -> None: ...
