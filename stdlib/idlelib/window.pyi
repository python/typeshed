from collections.abc import Callable
from tkinter import Tk, Toplevel
from typing import Any

class WindowList:
    dict: dict[str, Toplevel]
    callbacks: list[Callable[[], Any]]
    def __init__(self) -> None: ...
    def add(self, window: Toplevel) -> None: ...
    def delete(self, window: Toplevel) -> None: ...
    def add_windows_to_menu(self, menu: Tk) -> None: ...
    def register_callback(self, callback: Callable[[], Any]) -> None: ...
    def unregister_callback(self, callback: Callable[[], Any]) -> None: ...
    def call_callbacks(self) -> None: ...

registry: WindowList
add_windows_to_menu: Callable[[Tk], None]
register_callback: Callable[[Callable[[], Any]], None]
unregister_callback: Callable[[Callable[[], Any]], None]

class ListedToplevel(Toplevel):
    focused_widget: Toplevel
    def __init__(self, master: Tk | None, **kw: Any) -> None: ...
    def destroy(self) -> None: ...
    def update_windowlist_registry(self, window: Toplevel) -> None: ...
    def get_title(self) -> str: ...
    def wakeup(self) -> None: ...
