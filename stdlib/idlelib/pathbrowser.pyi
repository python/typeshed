from _typeshed import Incomplete

from idlelib.browser import ModuleBrowser as ModuleBrowser, ModuleBrowserTreeItem as ModuleBrowserTreeItem
from idlelib.tree import TreeItem as TreeItem

class PathBrowser(ModuleBrowser):
    def __getattr__(self, name: str) -> Incomplete: ...  # Incomplete
    master: Incomplete
    def __init__(self, master, *, _htest: bool = ..., _utest: bool = ...) -> None: ...
    def settitle(self) -> None: ...
    def rootnode(self): ...

class PathBrowserTreeItem(TreeItem):
    def GetText(self): ...
    def GetSubList(self): ...

class DirBrowserTreeItem(TreeItem):
    dir: Incomplete
    packages: Incomplete
    def __init__(self, dir, packages=...) -> None: ...
    def GetText(self): ...
    def GetSubList(self): ...
    def ispackagedir(self, file): ...
    def listmodules(self, allnames): ...
