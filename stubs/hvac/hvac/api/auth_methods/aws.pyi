from _typeshed import Incomplete

from hvac.api.vault_api_base import VaultApiBase

logger: Incomplete

class Aws(VaultApiBase):
    def configure(
        self,
        max_retries: Incomplete | None = ...,
        access_key: Incomplete | None = ...,
        secret_key: Incomplete | None = ...,
        endpoint: Incomplete | None = ...,
        iam_endpoint: Incomplete | None = ...,
        sts_endpoint: Incomplete | None = ...,
        iam_server_id_header_value: Incomplete | None = ...,
        mount_point=...,
    ): ...
    def read_config(self, mount_point=...): ...
    def delete_config(self, mount_point=...): ...
    def configure_identity_integration(
        self, iam_alias: Incomplete | None = ..., ec2_alias: Incomplete | None = ..., mount_point=...
    ): ...
    def read_identity_integration(self, mount_point=...): ...
    def create_certificate_configuration(
        self, cert_name, aws_public_cert, document_type: Incomplete | None = ..., mount_point=...
    ): ...
    def read_certificate_configuration(self, cert_name, mount_point=...): ...
    def delete_certificate_configuration(self, cert_name, mount_point=...): ...
    def list_certificate_configurations(self, mount_point=...): ...
    def create_sts_role(self, account_id, sts_role, mount_point=...): ...
    def read_sts_role(self, account_id, mount_point=...): ...
    def list_sts_roles(self, mount_point=...): ...
    def delete_sts_role(self, account_id, mount_point=...): ...
    def configure_identity_whitelist_tidy(
        self, safety_buffer: Incomplete | None = ..., disable_periodic_tidy: Incomplete | None = ..., mount_point=...
    ): ...
    def read_identity_whitelist_tidy(self, mount_point=...): ...
    def delete_identity_whitelist_tidy(self, mount_point=...): ...
    def configure_role_tag_blacklist_tidy(
        self, safety_buffer: Incomplete | None = ..., disable_periodic_tidy: Incomplete | None = ..., mount_point=...
    ): ...
    def read_role_tag_blacklist_tidy(self, mount_point=...): ...
    def delete_role_tag_blacklist_tidy(self, mount_point=...): ...
    def create_role(
        self,
        role,
        auth_type: Incomplete | None = ...,
        bound_ami_id: Incomplete | None = ...,
        bound_account_id: Incomplete | None = ...,
        bound_region: Incomplete | None = ...,
        bound_vpc_id: Incomplete | None = ...,
        bound_subnet_id: Incomplete | None = ...,
        bound_iam_role_arn: Incomplete | None = ...,
        bound_iam_instance_profile_arn: Incomplete | None = ...,
        bound_ec2_instance_id: Incomplete | None = ...,
        role_tag: Incomplete | None = ...,
        bound_iam_principal_arn: Incomplete | None = ...,
        inferred_entity_type: Incomplete | None = ...,
        inferred_aws_region: Incomplete | None = ...,
        resolve_aws_unique_ids: Incomplete | None = ...,
        ttl: Incomplete | None = ...,
        max_ttl: Incomplete | None = ...,
        period: Incomplete | None = ...,
        policies: Incomplete | None = ...,
        allow_instance_migration: Incomplete | None = ...,
        disallow_reauthentication: Incomplete | None = ...,
        mount_point=...,
    ): ...
    def read_role(self, role, mount_point=...): ...
    def list_roles(self, mount_point=...): ...
    def delete_role(self, role, mount_point=...): ...
    def create_role_tags(
        self,
        role,
        policies: Incomplete | None = ...,
        max_ttl: Incomplete | None = ...,
        instance_id: Incomplete | None = ...,
        allow_instance_migration: Incomplete | None = ...,
        disallow_reauthentication: Incomplete | None = ...,
        mount_point=...,
    ): ...
    def iam_login(
        self,
        access_key,
        secret_key,
        session_token: Incomplete | None = ...,
        header_value: Incomplete | None = ...,
        role: Incomplete | None = ...,
        use_token: bool = ...,
        region: str = ...,
        mount_point=...,
    ): ...
    def ec2_login(
        self, pkcs7, nonce: Incomplete | None = ..., role: Incomplete | None = ..., use_token: bool = ..., mount_point=...
    ): ...
    def place_role_tags_in_blacklist(self, role_tag, mount_point=...): ...
    def read_role_tag_blacklist(self, role_tag, mount_point=...): ...
    def list_blacklist_tags(self, mount_point=...): ...
    def delete_blacklist_tags(self, role_tag, mount_point=...): ...
    def tidy_blacklist_tags(self, safety_buffer: str = ...): ...
    def read_identity_whitelist(self, instance_id, mount_point=...): ...
    def list_identity_whitelist(self, mount_point=...): ...
    def delete_identity_whitelist_entries(self, instance_id, mount_point=...): ...
    def tidy_identity_whitelist_entries(self, safety_buffer: str = ...): ...
