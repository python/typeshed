from _typeshed import Incomplete
from typing import NamedTuple

from huey.exceptions import HueyException as HueyException

class Message(NamedTuple):
    id: Incomplete | None = ...
    name: Incomplete | None = ...
    eta: Incomplete | None = ...
    retries: Incomplete | None = ...
    retry_delay: Incomplete | None = ...
    priority: Incomplete | None = ...
    args: Incomplete | None = ...
    kwargs: Incomplete | None = ...
    on_complete: Incomplete | None = ...
    on_error: Incomplete | None = ...
    expires: Incomplete | None = ...
    expires_resolved: Incomplete | None = ...

class Registry:
    def __init__(self) -> None: ...
    def task_to_string(self, task_class): ...
    def register(self, task_class): ...
    def unregister(self, task_class): ...
    def string_to_task(self, task_str): ...
    def create_message(self, task): ...
    def create_task(self, message): ...
    @property
    def periodic_tasks(self): ...
