from _typeshed import Incomplete
from collections.abc import Iterable
from datetime import date, datetime, timedelta
from time import _TimeTuple, struct_time
from typing import Any, Generic, NamedTuple, TypeVar, overload

_StringTypes = TypeVar("_StringTypes", str, bytes, str | bytes)

CHARSET_RE: Incomplete
SCHEME_RE: Incomplete

class _SimpleProperty(Generic[_StringTypes]):
    @overload
    def __get__(self, __obj: None, __type: type | None = ...) -> property: ...
    @overload
    def __get__(self, __obj: Any, __type: type | None = ...) -> str | None: ...
    def __set__(self, __obj: Any, __value: _StringTypes | None) -> None: ...
    def __delete__(self, __obj: Any) -> None: ...

class _ListProperty(Generic[_StringTypes]):
    @overload
    def __get__(self, __obj: None, __type: type | None = ...) -> property: ...
    @overload
    def __get__(self, __obj: Any, __type: type | None = ...) -> tuple[str, ...] | None: ...
    @overload
    def __set__(self, __obj: Any, __value: _StringTypes | None) -> None: ...
    @overload
    def __set__(self, __obj: Any, __value: Iterable[str | bytes]) -> None: ...
    def __delete__(self, __obj: Any) -> None: ...

class _DateProperty(Generic[_StringTypes]):
    @overload
    def __get__(self, __obj: None, __type: type | None = ...) -> property: ...
    @overload
    def __get__(self, __obj: Any, __type: type | None = ...) -> tuple[str, ...] | None: ...
    @overload
    def __set__(self, __obj: Any, __value: _StringTypes | None) -> None: ...
    @overload
    def __set__(self, __obj: Any, __value: date | datetime) -> None: ...
    @overload
    def __set__(self, __obj: Any, __value: timedelta) -> None: ...
    @overload
    def __set__(self, __obj: Any, __value: _TimeTuple | struct_time) -> None: ...
    @overload
    def __set__(self, __obj: Any, __value: float) -> None: ...
    def __delete__(self, __obj: Any) -> None: ...

def environ_getter(key, default=..., rfc_section: Incomplete | None = ...): ...
def environ_decoder(key, default=..., rfc_section: Incomplete | None = ..., encattr: Incomplete | None = ...): ...
def upath_property(key): ...
def deprecated_property(attr, name, text, version): ...
def header_getter(header: str, rfc_section: str) -> _SimpleProperty[str | bytes]: ...
def converter(prop, parse, serialize, convert_name: Incomplete | None = ...): ...
def list_header(header: str, rfc_section: str) -> _ListProperty[str | bytes]: ...
def parse_list(value): ...
def serialize_list(value): ...
def converter_date(prop): ...
def date_header(header: str, rfc_section: str) -> _DateProperty[str | bytes]: ...
def parse_etag_response(value, strong: bool = ...): ...
def serialize_etag_response(value): ...
def serialize_if_range(value): ...
def parse_range(value): ...
def serialize_range(value): ...
def parse_int(value): ...
def parse_int_safe(value): ...

serialize_int = str

def parse_content_range(value): ...
def serialize_content_range(value): ...
def parse_auth_params(params): ...

known_auth_schemes: dict[str, None]

class _authorization(NamedTuple):
    authtype: str
    params: dict[str, str] | str

def parse_auth(val): ...
def serialize_auth(val): ...
