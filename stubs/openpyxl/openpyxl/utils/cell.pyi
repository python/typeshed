from collections.abc import Generator
from re import Pattern

COORD_RE: Pattern[bytes]
COL_RANGE: str
ROW_RANGE: str
RANGE_EXPR: str
ABSOLUTE_RE: Pattern[bytes]
SHEET_TITLE: str
SHEETRANGE_RE: Pattern[bytes]

def get_column_interval(start: str | int, end: str | int) -> list[str]: ...
def coordinate_from_string(coord_string: str) -> tuple[str, int]: ...
def absolute_coordinate(coord_string: str) -> str: ...
def get_column_letter(idx: int) -> str: ...
def column_index_from_string(str_col: str) -> int: ...
def range_boundaries(
    range_string: str,
) -> tuple[None, int, None, int] | tuple[int, int, int, int] | tuple[int, None, int, None]: ...
def rows_from_range(range_string: str) -> Generator[tuple[str, ...], None, None]: ...
def cols_from_range(range_string: str) -> Generator[tuple[str, ...], None, None]: ...
def coordinate_to_tuple(coordinate: str) -> tuple[int, int]: ...
def range_to_tuple(range_string: str) -> tuple[str, tuple[int, int, int, int]]: ...
def quote_sheetname(sheetname: str) -> str: ...
