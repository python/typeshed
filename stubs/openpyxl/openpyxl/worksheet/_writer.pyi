from _typeshed import Incomplete
from collections.abc import Generator

from openpyxl.cell.cell import Cell
from openpyxl.worksheet._write_only import WriteOnlyWorksheet
from openpyxl.worksheet.worksheet import Worksheet

ALL_TEMP_FILES: list[Incomplete]

def create_temporary_file(suffix: str = ...) -> str: ...

class WorksheetWriter:
    ws: Worksheet | WriteOnlyWorksheet
    out: str
    xf: Generator[Incomplete | None, None, None]
    def __init__(self, ws: Worksheet | WriteOnlyWorksheet, out: str | None = ...) -> None: ...
    def write_properties(self) -> None: ...
    def write_dimensions(self) -> None: ...
    def write_format(self) -> None: ...
    def write_views(self) -> None: ...
    def write_cols(self) -> None: ...
    def write_top(self) -> None: ...
    def rows(self) -> list[tuple[int, list[Cell]]]: ...
    def write_rows(self) -> None: ...
    def write_row(self, xf, row, row_idx) -> None: ...
    def write_protection(self) -> None: ...
    def write_scenarios(self) -> None: ...
    def write_filter(self) -> None: ...
    def write_sort(self) -> None: ...
    def write_merged_cells(self) -> None: ...
    def write_formatting(self) -> None: ...
    def write_validations(self) -> None: ...
    def write_hyperlinks(self) -> None: ...
    def write_print(self) -> None: ...
    def write_margins(self) -> None: ...
    def write_page(self) -> None: ...
    def write_header(self) -> None: ...
    def write_breaks(self) -> None: ...
    def write_drawings(self) -> None: ...
    def write_legacy(self) -> None: ...
    def write_tables(self) -> None: ...
    def get_stream(self) -> Generator[Incomplete | None, None, None]: ...
    def write_tail(self) -> None: ...
    def write(self) -> None: ...
    def close(self) -> None: ...
    def read(self) -> bytes: ...
    def cleanup(self) -> None: ...
