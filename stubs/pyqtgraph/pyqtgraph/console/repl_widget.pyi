import types
from _typeshed import Incomplete

from ..Qt import QtWidgets

class ReplWidget(QtWidgets.QWidget):
    sigCommandEntered: Incomplete
    sigCommandRaisedException: Incomplete
    globals: Incomplete
    locals: Incomplete
    stdoutInterceptor: Incomplete
    ps1: str
    ps2: str
    textStyles: Incomplete
    def __init__(self, globals, locals, parent=None) -> None: ...
    def runCmd(self, cmd) -> None: ...
    def write(self, strn, style: str = "output", scrollToBottom: str = "auto") -> None: ...
    def displayException(self) -> None: ...

class StdoutInterceptor:
    writeFn: Incomplete
    def __init__(self, writeFn) -> None: ...
    def realOutputFiles(self): ...
    def print(self, *args) -> None: ...
    def flush(self) -> None: ...
    def fileno(self): ...
    def write(self, strn) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(
        self, exc_type: type[BaseException] | None, exc_val: BaseException | None, exc_tb: types.TracebackType | None
    ) -> None: ...
