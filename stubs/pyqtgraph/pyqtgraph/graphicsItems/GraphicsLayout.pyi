from _typeshed import Incomplete

from .GraphicsWidget import GraphicsWidget

__all__ = ["GraphicsLayout"]

class GraphicsLayout(GraphicsWidget):
    border: Incomplete
    layout: Incomplete
    items: Incomplete
    rows: Incomplete
    itemBorders: Incomplete
    currentRow: int
    currentCol: int
    def __init__(self, parent=None, border=None) -> None: ...
    def setBorder(self, *args, **kwds) -> None: ...
    def nextRow(self) -> None: ...
    def nextColumn(self) -> None: ...
    def nextCol(self, *args, **kargs): ...
    def addPlot(self, row=None, col=None, rowspan: int = 1, colspan: int = 1, **kargs): ...
    def addViewBox(self, row=None, col=None, rowspan: int = 1, colspan: int = 1, **kargs): ...
    def addLabel(self, text: str = " ", row=None, col=None, rowspan: int = 1, colspan: int = 1, **kargs): ...
    def addLayout(self, row=None, col=None, rowspan: int = 1, colspan: int = 1, **kargs): ...
    def addItem(self, item, row=None, col=None, rowspan: int = 1, colspan: int = 1) -> None: ...
    def getItem(self, row, col): ...
    def boundingRect(self): ...
    def itemIndex(self, item): ...
    def removeItem(self, item) -> None: ...
    def clear(self) -> None: ...
    def setContentsMargins(self, *args) -> None: ...
    def setSpacing(self, *args) -> None: ...
