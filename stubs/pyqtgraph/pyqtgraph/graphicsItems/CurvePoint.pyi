from _typeshed import Incomplete

from .GraphicsObject import GraphicsObject

__all__ = ["CurvePoint", "CurveArrow"]

class CurvePoint(GraphicsObject):
    curve: Incomplete
    def __init__(self, curve, index: int = 0, pos=None, rotate: bool = True) -> None: ...
    def setPos(self, pos) -> None: ...
    def setIndex(self, index) -> None: ...
    def event(self, ev): ...
    def boundingRect(self): ...
    def paint(self, *args) -> None: ...
    def makeAnimation(
        self, prop: str = "position", start: float = 0.0, end: float = 1.0, duration: int = 10000, loop: int = 1
    ): ...

class CurveArrow(CurvePoint):
    arrow: Incomplete
    def __init__(self, curve, index: int = 0, pos=None, **opts) -> None: ...
    def setStyle(self, **opts): ...
