from _typeshed import Incomplete

from .. import debug
from .GraphicsObject import GraphicsObject

__all__ = ["PlotCurveItem"]

class PlotCurveItem(GraphicsObject):
    sigPlotChanged: Incomplete
    sigClicked: Incomplete
    metaData: Incomplete
    opts: Incomplete
    def __init__(self, *args, **kargs) -> None: ...
    def implements(self, interface=None): ...
    def name(self): ...
    clickable: Incomplete
    def setClickable(self, s, width=None) -> None: ...
    def setCompositionMode(self, mode) -> None: ...
    def getData(self): ...
    def dataBounds(self, ax, frac: float = 1.0, orthoRange=None): ...
    def pixelPadding(self): ...
    def boundingRect(self): ...
    def viewTransformChanged(self) -> None: ...
    def invalidateBounds(self) -> None: ...
    def setPen(self, *args, **kargs) -> None: ...
    def setShadowPen(self, *args, **kargs) -> None: ...
    def setBrush(self, *args, **kargs) -> None: ...
    fillPath: Incomplete
    def setFillLevel(self, level) -> None: ...
    def setSkipFiniteCheck(self, skipFiniteCheck) -> None: ...
    def setData(self, *args, **kargs) -> None: ...
    yData: Incomplete
    xData: Incomplete
    path: Incomplete
    def updateData(self, *args, **kargs) -> None: ...
    def generatePath(self, x, y): ...
    def getPath(self): ...
    def setSegmentedLineMode(self, mode) -> None: ...
    @debug.warnOnException
    def paint(self, p, opt, widget) -> None: ...
    def paintGL(self, p, opt, widget) -> None: ...
    def clear(self) -> None: ...
    def mouseShape(self): ...
    def mouseClickEvent(self, ev) -> None: ...

class ROIPlotItem(PlotCurveItem):
    roi: Incomplete
    roiData: Incomplete
    roiImg: Incomplete
    axes: Incomplete
    xVals: Incomplete
    def __init__(self, roi, data, img, axes=(0, 1), xVals=None, color=None) -> None: ...
    def getRoiData(self): ...
    def roiChangedEvent(self) -> None: ...
