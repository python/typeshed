from _typeshed import Incomplete

from .GraphicsWidget import GraphicsWidget

__all__ = ["HistogramLUTItem"]

class HistogramLUTItem(GraphicsWidget):
    sigLookupTableChanged: Incomplete
    sigLevelsChanged: Incomplete
    sigLevelChangeFinished: Incomplete
    lut: Incomplete
    imageItem: Incomplete
    levelMode: Incomplete
    orientation: Incomplete
    gradientPosition: Incomplete
    layout: Incomplete
    vb: Incomplete
    gradient: Incomplete
    regions: Incomplete
    region: Incomplete
    axis: Incomplete
    plots: Incomplete
    plot: Incomplete
    def __init__(
        self,
        image=None,
        fillHistogram: bool = True,
        levelMode: str = "mono",
        gradientPosition: str = "right",
        orientation: str = "vertical",
    ) -> None: ...
    def fillHistogram(self, fill: bool = True, level: float = 0.0, color=(100, 100, 200)) -> None: ...
    def paint(self, p, *args) -> None: ...
    def setHistogramRange(self, mn, mx, padding: float = 0.1) -> None: ...
    def getHistogramRange(self): ...
    def autoHistogramRange(self) -> None: ...
    def disableAutoHistogramRange(self) -> None: ...
    def setImageItem(self, img) -> None: ...
    def viewRangeChanged(self) -> None: ...
    def gradientChanged(self) -> None: ...
    def getLookupTable(self, img=None, n=None, alpha=None): ...
    def regionChanged(self) -> None: ...
    def regionChanging(self) -> None: ...
    def imageChanged(self, autoLevel: bool = False, autoRange: bool = False) -> None: ...
    def getLevels(self): ...
    def setLevels(self, min=None, max=None, rgba=None) -> None: ...
    def setLevelMode(self, mode) -> None: ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
