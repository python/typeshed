from _typeshed import Incomplete

from .TextItem import TextItem
from .UIGraphicsItem import UIGraphicsItem

__all__ = ["TargetItem", "TargetLabel"]

class TargetItem(UIGraphicsItem):
    sigPositionChanged: Incomplete
    sigPositionChangeFinished: Incomplete
    movable: Incomplete
    moving: bool
    mouseHovering: bool
    currentPen: Incomplete
    currentBrush: Incomplete
    scale: Incomplete
    def __init__(
        self,
        pos=None,
        size: int = 10,
        symbol: str = "crosshair",
        pen=None,
        hoverPen=None,
        brush=None,
        hoverBrush=None,
        movable: bool = True,
        label=None,
        labelOpts=None,
    ) -> None: ...
    def setPos(self, *args) -> None: ...
    brush: Incomplete
    def setBrush(self, *args, **kwargs) -> None: ...
    hoverBrush: Incomplete
    def setHoverBrush(self, *args, **kwargs) -> None: ...
    pen: Incomplete
    def setPen(self, *args, **kwargs) -> None: ...
    hoverPen: Incomplete
    def setHoverPen(self, *args, **kwargs) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *_) -> None: ...
    def setPath(self, path) -> None: ...
    def shape(self): ...
    def generateShape(self): ...
    symbolOffset: Incomplete
    def mouseDragEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def setMouseHover(self, hover) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def viewTransformChanged(self) -> None: ...
    def pos(self): ...
    def label(self): ...
    def setLabel(self, text=None, labelOpts=None) -> None: ...

class TargetLabel(TextItem):
    offset: Incomplete
    target: Incomplete
    def __init__(self, target, text: str = "", offset=(20, 0), anchor=(0, 0.5), **kwargs) -> None: ...
    def format(self): ...
    def setFormat(self, text) -> None: ...
    def valueChanged(self) -> None: ...
    def viewTransformChanged(self): ...
    def mouseClickEvent(self, ev): ...
    def mouseDragEvent(self, ev) -> None: ...
