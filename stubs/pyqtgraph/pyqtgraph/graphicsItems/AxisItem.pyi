from _typeshed import Incomplete

from .GraphicsWidget import GraphicsWidget

__all__ = ["AxisItem"]

class AxisItem(GraphicsWidget):
    label: Incomplete
    picture: Incomplete
    orientation: Incomplete
    style: Incomplete
    textWidth: int
    textHeight: int
    fixedWidth: Incomplete
    fixedHeight: Incomplete
    labelText: Incomplete
    labelUnits: Incomplete
    labelUnitPrefix: Incomplete
    labelStyle: Incomplete
    logMode: bool
    scale: float
    autoSIPrefix: bool
    autoSIPrefixScale: float
    grid: bool
    def __init__(
        self,
        orientation,
        pen=None,
        textPen=None,
        tickPen=None,
        linkView=None,
        parent=None,
        maxTickLength: int = -5,
        showValues: bool = True,
        text: str = "",
        units: str = "",
        unitPrefix: str = "",
        **args,
    ) -> None: ...
    def setStyle(self, **kwds) -> None: ...
    def close(self) -> None: ...
    def setGrid(self, grid) -> None: ...
    def setLogMode(self, *args, **kwargs) -> None: ...
    def setTickFont(self, font) -> None: ...
    def resizeEvent(self, ev=None) -> None: ...
    def showLabel(self, show: bool = True) -> None: ...
    def setLabel(self, text=None, units=None, unitPrefix=None, **args) -> None: ...
    def labelString(self): ...
    def setHeight(self, h=None) -> None: ...
    def setWidth(self, w=None) -> None: ...
    def pen(self): ...
    def setPen(self, *args, **kwargs) -> None: ...
    def textPen(self): ...
    def setTextPen(self, *args, **kwargs) -> None: ...
    def tickPen(self): ...
    def setTickPen(self, *args, **kwargs) -> None: ...
    def setScale(self, scale=None) -> None: ...
    def enableAutoSIPrefix(self, enable: bool = True) -> None: ...
    def updateAutoSIPrefix(self) -> None: ...
    range: Incomplete
    def setRange(self, mn, mx) -> None: ...
    def linkedView(self): ...
    def linkToView(self, view) -> None: ...
    def unlinkFromView(self) -> None: ...
    def linkedViewChanged(self, view, newRange=None) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, opt, widget) -> None: ...
    def setTickDensity(self, density: float = 1.0) -> None: ...
    def setTicks(self, ticks) -> None: ...
    def setTickSpacing(self, major=None, minor=None, levels=None) -> None: ...
    def tickSpacing(self, minVal, maxVal, size): ...
    def tickValues(self, minVal, maxVal, size): ...
    def logTickValues(self, minVal, maxVal, size, stdTicks): ...
    def tickStrings(self, values, scale, spacing): ...
    def logTickStrings(self, values, scale, spacing): ...
    def generateDrawSpecs(self, p): ...
    def drawPicture(self, p, axisSpec, tickSpecs, textSpecs) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def wheelEvent(self, event) -> None: ...
    def mouseDragEvent(self, event): ...
    def mouseClickEvent(self, event): ...
