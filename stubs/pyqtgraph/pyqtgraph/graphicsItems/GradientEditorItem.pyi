from _typeshed import Incomplete

from ..Qt import QtWidgets
from .GraphicsWidget import GraphicsWidget

__all__ = ["TickSliderItem", "GradientEditorItem", "addGradientListToDocstring"]

def addGradientListToDocstring(): ...

class TickSliderItem(GraphicsWidget):
    sigTicksChanged: Incomplete
    sigTicksChangeFinished: Incomplete
    orientation: Incomplete
    length: int
    tickSize: int
    ticks: Incomplete
    maxDim: int
    allowAdd: Incomplete
    allowRemove: Incomplete
    tickPen: Incomplete
    orientations: Incomplete
    def __init__(self, orientation: str = "bottom", allowAdd: bool = True, allowRemove: bool = True, **kargs) -> None: ...
    def paint(self, p, opt, widget) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def setMaxDim(self, mx=None) -> None: ...
    def setOrientation(self, orientation) -> None: ...
    def addTick(self, x, color=None, movable: bool = True, finish: bool = True): ...
    def removeTick(self, tick, finish: bool = True) -> None: ...
    def tickMoved(self, tick, pos) -> None: ...
    def tickMoveFinished(self, tick) -> None: ...
    def tickClicked(self, tick, ev) -> None: ...
    def widgetLength(self): ...
    def resizeEvent(self, ev) -> None: ...
    def setLength(self, newLen) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def showMenu(self, ev) -> None: ...
    def setTickColor(self, tick, color) -> None: ...
    def setTickValue(self, tick, val) -> None: ...
    def tickValue(self, tick): ...
    def getTick(self, tick): ...
    def listTicks(self): ...

class GradientEditorItem(TickSliderItem):
    sigGradientChanged: Incomplete
    sigGradientChangeFinished: Incomplete
    currentTick: Incomplete
    currentTickColor: Incomplete
    rectSize: int
    gradRect: Incomplete
    backgroundRect: Incomplete
    colorMode: str
    colorDialog: Incomplete
    rgbAction: Incomplete
    hsvAction: Incomplete
    menu: Incomplete
    linkedGradients: Incomplete
    def __init__(self, *args, **kargs) -> None: ...
    allowAdd: Incomplete
    def showTicks(self, show: bool = True) -> None: ...
    def setOrientation(self, orientation) -> None: ...
    def showMenu(self, ev) -> None: ...
    def colorMapMenuClicked(self, cmap) -> None: ...
    def loadPreset(self, name) -> None: ...
    def setColorMode(self, cm) -> None: ...
    def colorMap(self): ...
    gradient: Incomplete
    def updateGradient(self) -> None: ...
    def setLength(self, newLen) -> None: ...
    def currentColorChanged(self, color) -> None: ...
    def currentColorRejected(self) -> None: ...
    def currentColorAccepted(self) -> None: ...
    def tickClicked(self, tick, ev) -> None: ...
    def raiseColorDialog(self, tick) -> None: ...
    tickMenu: Incomplete
    def raiseTickContextMenu(self, tick, ev) -> None: ...
    def tickMoveFinished(self, tick) -> None: ...
    def getGradient(self): ...
    def getColor(self, x, toQColor: bool = True): ...
    def getLookupTable(self, nPts, alpha=None): ...
    def usesAlpha(self): ...
    def isLookupTrivial(self): ...
    def addTick(self, x, color=None, movable: bool = True, finish: bool = True): ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
    def setColorMap(self, cm) -> None: ...
    def linkGradient(self, slaveGradient, connect: bool = True): ...

class Tick(QtWidgets.QGraphicsWidget):
    sigMoving: Incomplete
    sigMoved: Incomplete
    sigClicked: Incomplete
    movable: Incomplete
    moving: bool
    scale: Incomplete
    color: Incomplete
    pen: Incomplete
    hoverPen: Incomplete
    currentPen: Incomplete
    removeAllowed: Incomplete
    pg: Incomplete
    def __init__(self, pos, color, movable: bool = True, scale: int = 10, pen: str = "w", removeAllowed: bool = True) -> None: ...
    def boundingRect(self): ...
    def shape(self): ...
    def paint(self, p, *args) -> None: ...
    cursorOffset: Incomplete
    startPosition: Incomplete
    def mouseDragEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...

class TickMenu(QtWidgets.QMenu):
    tick: Incomplete
    sliderItem: Incomplete
    removeAct: Incomplete
    fracPosSpin: Incomplete
    def __init__(self, tick, sliderItem) -> None: ...
    def fractionalValueChanged(self, x) -> None: ...
