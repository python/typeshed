from _typeshed import Incomplete

from .GraphicsObject import GraphicsObject

__all__ = ["LinearRegionItem"]

class LinearRegionItem(GraphicsObject):
    sigRegionChangeFinished: Incomplete
    sigRegionChanged: Incomplete
    Vertical: int
    Horizontal: int
    orientation: Incomplete
    blockLineSignal: bool
    moving: bool
    mouseHovering: bool
    span: Incomplete
    swapMode: Incomplete
    clipItem: Incomplete
    lines: Incomplete
    def __init__(
        self,
        values=(0, 1),
        orientation: str = "vertical",
        brush=None,
        pen=None,
        hoverBrush=None,
        hoverPen=None,
        movable: bool = True,
        bounds=None,
        span=(0, 1),
        swapMode: str = "sort",
        clipItem=None,
    ) -> None: ...
    def getRegion(self): ...
    def setRegion(self, rgn) -> None: ...
    brush: Incomplete
    currentBrush: Incomplete
    def setBrush(self, *br, **kargs) -> None: ...
    hoverBrush: Incomplete
    def setHoverBrush(self, *br, **kargs) -> None: ...
    def setBounds(self, bounds) -> None: ...
    movable: Incomplete
    def setMovable(self, m: bool = True) -> None: ...
    def setSpan(self, mn, mx) -> None: ...
    def setClipItem(self, item=None) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    def dataBounds(self, axis, frac: float = 1.0, orthoRange=None): ...
    def lineMoved(self, i) -> None: ...
    def lineMoveFinished(self) -> None: ...
    cursorOffsets: Incomplete
    startPositions: Incomplete
    def mouseDragEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def setMouseHover(self, hover) -> None: ...
