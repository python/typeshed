from _typeshed import Incomplete

from .AxisItem import AxisItem

__all__ = ["DateAxisItem"]

class TickSpec:
    spacing: Incomplete
    step: Incomplete
    format: Incomplete
    autoSkip: Incomplete
    def __init__(self, spacing, stepper, format, autoSkip=None) -> None: ...
    def makeTicks(self, minVal, maxVal, minSpc): ...
    def skipFactor(self, minSpc): ...

class ZoomLevel:
    tickSpecs: Incomplete
    utcOffset: int
    exampleText: Incomplete
    def __init__(self, tickSpecs, exampleText) -> None: ...
    def tickValues(self, minVal, maxVal, minSpc): ...

class DateAxisItem(AxisItem):
    utcOffset: Incomplete
    zoomLevels: Incomplete
    autoSIPrefix: bool
    def __init__(self, orientation: str = "bottom", utcOffset=None, **kwargs) -> None: ...
    def tickStrings(self, values, scale, spacing): ...
    def tickValues(self, minVal, maxVal, size): ...
    zoomLevel: Incomplete
    minSpacing: Incomplete
    def setZoomLevelForDensity(self, density): ...
    def linkToView(self, view) -> None: ...
    fontMetrics: Incomplete
    def generateDrawSpecs(self, p): ...
