from _typeshed import Incomplete

from .GraphicsObject import GraphicsObject

__all__ = ["PlotDataItem"]

class PlotDataset:
    x: Incomplete
    y: Incomplete
    xAllFinite: Incomplete
    yAllFinite: Incomplete
    def __init__(self, x, y, xAllFinite=None, yAllFinite=None) -> None: ...
    @property
    def containsNonfinite(self): ...
    def dataRect(self): ...
    def applyLogMapping(self, logMode) -> None: ...

class PlotDataItem(GraphicsObject):
    sigPlotChanged: Incomplete
    sigClicked: Incomplete
    sigPointsClicked: Incomplete
    sigPointsHovered: Incomplete
    curve: Incomplete
    scatter: Incomplete
    opts: Incomplete
    def __init__(self, *args, **kargs) -> None: ...
    @property
    def xData(self): ...
    @property
    def yData(self): ...
    def implements(self, interface=None): ...
    def name(self): ...
    def setCurveClickable(self, state, width=None) -> None: ...
    def curveClickable(self): ...
    def boundingRect(self): ...
    def setPos(self, x, y) -> None: ...
    def setAlpha(self, alpha, auto) -> None: ...
    def setFftMode(self, state) -> None: ...
    def setLogMode(self, xState, yState) -> None: ...
    def setDerivativeMode(self, state) -> None: ...
    def setPhasemapMode(self, state) -> None: ...
    def setPen(self, *args, **kargs) -> None: ...
    def setShadowPen(self, *args, **kargs) -> None: ...
    def setFillBrush(self, *args, **kargs) -> None: ...
    def setBrush(self, *args, **kargs): ...
    def setFillLevel(self, level) -> None: ...
    def setSymbol(self, symbol) -> None: ...
    def setSymbolPen(self, *args, **kargs) -> None: ...
    def setSymbolBrush(self, *args, **kargs) -> None: ...
    def setSymbolSize(self, size) -> None: ...
    def setDownsampling(self, ds=None, auto=None, method=None) -> None: ...
    def setClipToView(self, state) -> None: ...
    def setDynamicRangeLimit(self, limit: float = 1000000.0, hysteresis: float = 3.0) -> None: ...
    def setSkipFiniteCheck(self, skipFiniteCheck) -> None: ...
    def setData(self, *args, **kargs) -> None: ...
    def updateItems(self, styleUpdate: bool = True) -> None: ...
    def getOriginalDataset(self): ...
    def getData(self): ...
    def dataRect(self): ...
    def dataBounds(self, ax, frac: float = 1.0, orthoRange=None): ...
    def pixelPadding(self): ...
    def clear(self) -> None: ...
    def appendData(self, *args, **kargs) -> None: ...
    def curveClicked(self, curve, ev) -> None: ...
    def scatterClicked(self, plt, points, ev) -> None: ...
    def scatterHovered(self, plt, points, ev) -> None: ...
    def viewRangeChanged(self, vb=None, ranges=None, changed=None) -> None: ...
