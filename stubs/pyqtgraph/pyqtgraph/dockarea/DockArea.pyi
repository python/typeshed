from _typeshed import Incomplete

from ..Qt import QtWidgets
from .Container import Container

class DockArea(Container, QtWidgets.QWidget):
    dockdrop: Incomplete
    layout: Incomplete
    docks: Incomplete
    topContainer: Incomplete
    temporary: Incomplete
    tempAreas: Incomplete
    home: Incomplete
    def __init__(self, parent=None, temporary: bool = False, home=None) -> None: ...
    def type(self): ...
    def addDock(self, dock=None, position: str = "bottom", relativeTo=None, **kwds): ...
    def moveDock(self, dock, position, neighbor) -> None: ...
    def getContainer(self, obj): ...
    def makeContainer(self, typ): ...
    def addContainer(self, typ, obj): ...
    def insert(self, new, pos=None, neighbor=None) -> None: ...
    def count(self): ...
    def resizeEvent(self, ev) -> None: ...
    def addTempArea(self): ...
    def floatDock(self, dock) -> None: ...
    def removeTempArea(self, area) -> None: ...
    def saveState(self): ...
    def childState(self, obj): ...
    def restoreState(self, state, missing: str = "error", extra: str = "bottom") -> None: ...
    def buildFromState(self, state, docks, root, depth: int = 0, missing: str = "error") -> None: ...
    def findAll(self, obj=None, c=None, d=None): ...
    def apoptose(self, propagate: bool = True) -> None: ...
    def clear(self) -> None: ...
    def dragEnterEvent(self, *args) -> None: ...
    def dragMoveEvent(self, *args) -> None: ...
    def dragLeaveEvent(self, *args) -> None: ...
    def dropEvent(self, *args) -> None: ...
    def printState(self, state=None, name: str = "Main") -> None: ...

class TempAreaWindow(QtWidgets.QWidget):
    layout: Incomplete
    dockarea: Incomplete
    def __init__(self, area, **kwargs) -> None: ...
    def closeEvent(self, *args) -> None: ...
