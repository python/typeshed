from _typeshed import Incomplete

from ..Qt import QtCore

class Mutex(QtCore.QMutex):
    l: Incomplete
    tb: Incomplete
    debug: Incomplete
    def __init__(self, *args, **kargs) -> None: ...
    def tryLock(self, timeout=None, id=None): ...
    def lock(self, id=None) -> None: ...
    def unlock(self) -> None: ...
    def acquire(self, blocking: bool = True): ...
    def release(self) -> None: ...
    def depth(self): ...
    def traceback(self): ...
    def __exit__(self, *args) -> None: ...
    def __enter__(self): ...

class RecursiveMutex(Mutex):
    def __init__(self, **kwds) -> None: ...
