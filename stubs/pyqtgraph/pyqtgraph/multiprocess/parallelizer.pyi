from _typeshed import Incomplete

class CanceledError(Exception): ...

class Parallelize:
    showProgress: bool
    progressDlg: Incomplete
    workers: Incomplete
    tasks: Incomplete
    reseed: Incomplete
    kwds: Incomplete
    def __init__(
        self, tasks=None, workers=None, block: bool = True, progressDialog=None, randomReseed: bool = True, **kwds
    ) -> None: ...
    proc: Incomplete
    def __enter__(self): ...
    def __exit__(self, *exc_info) -> None: ...
    progress: Incomplete
    def runSerial(self): ...
    childs: Incomplete
    exitCodes: Incomplete
    def runParallel(self): ...
    @staticmethod
    def suggestedWorkerCount(): ...

class Tasker:
    proc: Incomplete
    par: Incomplete
    tasks: Incomplete
    def __init__(self, parallelizer, process, tasks, kwds) -> None: ...
    index: Incomplete
    def __iter__(self): ...
    def process(self) -> None: ...
    def numWorkers(self): ...
