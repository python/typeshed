from _typeshed import Incomplete

from OpenGL.GL import *

from ..Qt import QtWidgets

class GLViewMixin:
    opts: Incomplete
    items: Incomplete
    noRepeatKeys: Incomplete
    keysPressed: Incomplete
    keyTimer: Incomplete
    def __init__(self, *args, rotationMethod: str = "euler", **kwargs) -> None: ...
    def deviceWidth(self): ...
    def deviceHeight(self): ...
    def reset(self) -> None: ...
    def addItem(self, item) -> None: ...
    def removeItem(self, item) -> None: ...
    def clear(self) -> None: ...
    def initializeGL(self) -> None: ...
    def setBackgroundColor(self, *args, **kwds) -> None: ...
    def getViewport(self): ...
    def setProjection(self, region=None) -> None: ...
    def projectionMatrix(self, region=None): ...
    def setModelview(self) -> None: ...
    def viewMatrix(self): ...
    def itemsAt(self, region=None): ...
    def paintGL(self, region=None, viewport=None, useItemNames: bool = False) -> None: ...
    def drawItemTree(self, item=None, useItemNames: bool = False): ...
    def setCameraPosition(self, pos=None, distance=None, elevation=None, azimuth=None, rotation=None) -> None: ...
    def cameraPosition(self): ...
    def setCameraParams(self, **kwds) -> None: ...
    def cameraParams(self): ...
    def orbit(self, azim, elev) -> None: ...
    def pan(self, dx, dy, dz, relative: str = "global") -> None: ...
    def pixelSize(self, pos): ...
    mousePos: Incomplete
    def mousePressEvent(self, ev) -> None: ...
    def mouseMoveEvent(self, ev) -> None: ...
    def mouseReleaseEvent(self, ev) -> None: ...
    def wheelEvent(self, ev) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def keyReleaseEvent(self, ev) -> None: ...
    def evalKeyState(self) -> None: ...
    def readQImage(self): ...
    def renderToArray(self, size, format=..., type=..., textureSize: int = 1024, padding: int = 256): ...

class GLViewWidget(GLViewMixin, QtWidgets.QOpenGLWidget):
    def __init__(self, *args, devicePixelRatio=None, **kwargs) -> None: ...
