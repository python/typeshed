from _typeshed import Incomplete

from ..Qt import QtWidgets

__all__ = ["GraphicsView"]

class GraphicsView(QtWidgets.QGraphicsView):
    sigDeviceRangeChanged: Incomplete
    sigDeviceTransformChanged: Incomplete
    sigMouseReleased: Incomplete
    sigSceneMouseMoved: Incomplete
    sigScaleChanged: Incomplete
    lastFileDir: Incomplete
    closed: bool
    lockedViewports: Incomplete
    lastMousePos: Incomplete
    aspectLocked: bool
    range: Incomplete
    autoPixelRange: bool
    currentItem: Incomplete
    sceneObj: Incomplete
    centralWidget: Incomplete
    centralLayout: Incomplete
    mouseEnabled: bool
    scaleCenter: bool
    clickAccepted: bool
    def __init__(self, parent=None, useOpenGL=None, background: str = "default") -> None: ...
    def setAntialiasing(self, aa) -> None: ...
    def setBackground(self, background) -> None: ...
    def paintEvent(self, ev): ...
    def render(self, *args, **kwds): ...
    def close(self) -> None: ...
    def useOpenGL(self, b: bool = True) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def setCentralItem(self, item): ...
    def setCentralWidget(self, item) -> None: ...
    def addItem(self, *args): ...
    def removeItem(self, *args): ...
    def enableMouse(self, b: bool = True) -> None: ...
    mouseTrail: Incomplete
    lastButtonReleased: Incomplete
    def clearMouse(self) -> None: ...
    def resizeEvent(self, ev) -> None: ...
    def updateMatrix(self, propagate: bool = True) -> None: ...
    def viewRect(self): ...
    def visibleRange(self): ...
    def translate(self, dx, dy) -> None: ...
    def scale(self, sx, sy, center=None) -> None: ...
    def setRange(
        self, newRect=None, padding: float = 0.05, lockAspect=None, propagate: bool = True, disableAutoPixel: bool = True
    ) -> None: ...
    def scaleToImage(self, image) -> None: ...
    def lockXRange(self, v1) -> None: ...
    def setXRange(self, r, padding: float = 0.05) -> None: ...
    def setYRange(self, r, padding: float = 0.05) -> None: ...
    def wheelEvent(self, ev) -> None: ...
    def setAspectLocked(self, s) -> None: ...
    def leaveEvent(self, ev) -> None: ...
    mousePressPos: Incomplete
    def mousePressEvent(self, ev) -> None: ...
    def mouseReleaseEvent(self, ev) -> None: ...
    def mouseMoveEvent(self, ev) -> None: ...
    def pixelSize(self): ...
    def dragEnterEvent(self, ev) -> None: ...
