from _typeshed import Incomplete

from ..Qt import QtWidgets

__all__ = ["FeedbackButton"]

class FeedbackButton(QtWidgets.QPushButton):
    sigCallSuccess: Incomplete
    sigCallFailure: Incomplete
    sigCallProcess: Incomplete
    sigReset: Incomplete
    origStyle: Incomplete
    origText: Incomplete
    origTip: Incomplete
    limitedTime: bool
    def __init__(self, *args) -> None: ...
    def feedback(self, success, message=None, tip: str = "", limitedTime: bool = True) -> None: ...
    def success(self, message=None, tip: str = "", limitedTime: bool = True) -> None: ...
    def failure(self, message=None, tip: str = "", limitedTime: bool = True) -> None: ...
    def processing(self, message: str = "Processing..", tip: str = "", processEvents: bool = True) -> None: ...
    def reset(self) -> None: ...
    count: int
    indStyle: Incomplete
    def startBlink(self, color, message=None, tip: str = "", limitedTime: bool = True) -> None: ...
    def borderOn(self) -> None: ...
    def borderOff(self) -> None: ...
    def setText(self, text=None, temporary: bool = False) -> None: ...
    def setToolTip(self, text=None, temporary: bool = False) -> None: ...
    def setStyleSheet(self, style=None, temporary: bool = False) -> None: ...
