from _typeshed import Incomplete

from ..Qt import QtWidgets

__all__ = ["SpinBox"]

class SpinBox(QtWidgets.QAbstractSpinBox):
    valueChanged: Incomplete
    sigValueChanged: Incomplete
    sigValueChanging: Incomplete
    lastValEmitted: Incomplete
    lastText: str
    textValid: bool
    errorBox: Incomplete
    opts: Incomplete
    decOpts: Incomplete
    val: Incomplete
    skipValidate: bool
    proxy: Incomplete
    def __init__(self, parent=None, value: float = 0.0, **kwargs) -> None: ...
    def setOpts(self, **opts) -> None: ...
    def setMaximum(self, m, update: bool = True) -> None: ...
    def setMinimum(self, m, update: bool = True) -> None: ...
    def wrapping(self): ...
    def setWrapping(self, s) -> None: ...
    def setPrefix(self, p) -> None: ...
    def setRange(self, r0, r1) -> None: ...
    def setProperty(self, prop, val) -> None: ...
    def setSuffix(self, suf) -> None: ...
    def setSingleStep(self, step) -> None: ...
    def setDecimals(self, decimals) -> None: ...
    def selectNumber(self) -> None: ...
    def focusInEvent(self, ev) -> None: ...
    def value(self): ...
    def setValue(self, value=None, update: bool = True, delaySignal: bool = False): ...
    def emitChanged(self) -> None: ...
    def delayedChange(self) -> None: ...
    def widgetGroupInterface(self): ...
    def sizeHint(self): ...
    def stepEnabled(self): ...
    def stepBy(self, n) -> None: ...
    def valueInRange(self, value): ...
    def updateText(self, **kwargs) -> None: ...
    def formatText(self, **kwargs): ...
    def validate(self, strn, pos): ...
    def fixup(self, strn): ...
    def interpret(self): ...
    def editingFinishedEvent(self) -> None: ...
    def paintEvent(self, ev) -> None: ...

class ErrorBox(QtWidgets.QWidget):
    def __init__(self, parent) -> None: ...
    def eventFilter(self, obj, ev): ...
    def paintEvent(self, ev) -> None: ...
