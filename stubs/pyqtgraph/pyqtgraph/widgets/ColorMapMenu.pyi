from _typeshed import Incomplete
from typing import NamedTuple

from ..Qt import QtWidgets

__all__ = ["ColorMapMenu"]

class PrivateActionData(NamedTuple):
    name: Incomplete
    source: Incomplete

class ColorMapMenu(QtWidgets.QMenu):
    sigColorMapTriggered: Incomplete
    def __init__(self, *, userList=None, showGradientSubMenu: bool = False, showColorMapSubMenus: bool = False) -> None: ...
    def onTriggered(self, action) -> None: ...
    def buildGradientSubMenu(self) -> None: ...
    def buildLocalSubMenu(self) -> None: ...
    def buildCetLocalSubMenu(self) -> None: ...
    def buildCetExternalSubMenu(self) -> None: ...
    def buildMplCategorySubMenu(self) -> None: ...
    def buildMplOthersSubMenu(self) -> None: ...
    def buildColorcetSubMenu(self) -> None: ...
    def buildSubMenu(self, names, source, sort: bool = True) -> None: ...
    @staticmethod
    def actionDataToColorMap(data): ...
