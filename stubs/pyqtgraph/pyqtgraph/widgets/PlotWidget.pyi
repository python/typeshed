from _typeshed import Incomplete

from .GraphicsView import GraphicsView

__all__ = ["PlotWidget"]

class PlotWidget(GraphicsView):
    sigRangeChanged: Incomplete
    sigTransformChanged: Incomplete
    plotItem: Incomplete
    def __init__(self, parent=None, background: str = "default", plotItem=None, **kargs) -> None: ...
    def close(self) -> None: ...
    def __getattr__(self, attr): ...
    def viewRangeChanged(self, view, range) -> None: ...
    def widgetGroupInterface(self): ...
    def saveState(self): ...
    def restoreState(self, state): ...
    def getPlotItem(self): ...
    # Inherited from PlotItem:
    def setAxisItems(self, axisItems=None) -> None: ...
    def addItem(self, item, *args, **kargs) -> None: ...
    def removeItem(self, item) -> None: ...
    def clear(self) -> None: ...
    def register(self, name): ...
    def unregister(self) -> None: ...
    def setMouseEnabled(self, x=None, y=None) -> None: ...
    def viewRect(self): ...
    def setRange(
        self, rect=None, xRange=None, yRange=None, padding=None, update: bool = True, disableAutoRange: bool = True
    ) -> None: ...
    def setYRange(self, min, max, padding=None, update: bool = True) -> None: ...
    def setXRange(self, min, max, padding=None, update: bool = True) -> None: ...
    def autoRange(self, padding=None, items=None, item=None) -> None: ...
    def setLimits(self, **kwds) -> None: ...
    def enableAutoRange(self, axis=None, enable: bool = True, x=None, y=None) -> None: ...
    def disableAutoRange(self, axis=None) -> None: ...
    def setXLink(self, view) -> None: ...
    def setYLink(self, view) -> None: ...
    def setAspectLocked(self, lock: bool = True, ratio: int = 1) -> None: ...
