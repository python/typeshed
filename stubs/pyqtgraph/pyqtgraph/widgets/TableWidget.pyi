from _typeshed import Incomplete
from collections.abc import Generator

from ..Qt import QtWidgets

__all__ = ["TableWidget"]

class TableWidget(QtWidgets.QTableWidget):
    itemClass: Incomplete
    sortModes: Incomplete
    contextMenu: Incomplete
    def __init__(self, *args, **kwds) -> None: ...
    verticalHeadersSet: bool
    horizontalHeadersSet: bool
    items: Incomplete
    def clear(self) -> None: ...
    def setData(self, data) -> None: ...
    @_defersort
    def appendData(self, data) -> None: ...
    editable: Incomplete
    def setEditable(self, editable: bool = True) -> None: ...
    def setFormat(self, format, column=None) -> None: ...
    def iteratorFn(self, data): ...
    def iterFirstAxis(self, data) -> Generator[Incomplete]: ...
    def iterate(self, data) -> Generator[Incomplete]: ...
    def iterateScalar(self, data) -> Generator[Incomplete]: ...
    def appendRow(self, data) -> None: ...
    @_defersort
    def addRow(self, vals) -> None: ...
    @_defersort
    def setRow(self, row, vals) -> None: ...
    def setSortMode(self, column, mode) -> None: ...
    def sizeHint(self): ...
    def serialize(self, useSelection: bool = False): ...
    def copySel(self) -> None: ...
    def copyAll(self) -> None: ...
    def saveSel(self) -> None: ...
    def saveAll(self) -> None: ...
    def save(self, data) -> None: ...
    def contextMenuEvent(self, ev) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def handleItemChanged(self, item) -> None: ...

class TableWidgetItem(QtWidgets.QTableWidgetItem):
    sortMode: str
    index: Incomplete
    def __init__(self, val, index, format=None) -> None: ...
    def setEditable(self, editable) -> None: ...
    def setSortMode(self, mode) -> None: ...
    def setFormat(self, fmt) -> None: ...
    value: Incomplete
    def setValue(self, value) -> None: ...
    def itemChanged(self) -> None: ...
    def textChanged(self) -> None: ...
    def format(self): ...
    def __lt__(self, other): ...
