from _typeshed import Incomplete

from ..Qt import QtWidgets

__all__ = ["TreeWidget", "TreeWidgetItem"]

class TreeWidget(QtWidgets.QTreeWidget):
    sigItemMoved: Incomplete
    sigItemCheckStateChanged: Incomplete
    sigItemTextChanged: Incomplete
    sigColumnCountChanged: Incomplete
    placeholders: Incomplete
    childNestingLimit: Incomplete
    def __init__(self, parent=None) -> None: ...
    def setItemWidget(self, item, col, wid) -> None: ...
    def itemWidget(self, item, col): ...
    def dropMimeData(self, parent, index, data, action): ...
    def itemMoving(self, item, parent, index): ...
    def prepareMove(self, item) -> None: ...
    def recoverMove(self, item) -> None: ...
    def collapseTree(self, item) -> None: ...
    def removeTopLevelItem(self, item) -> None: ...
    def listAllItems(self, item=None): ...
    def dropEvent(self, ev) -> None: ...
    def updateDropFlags(self) -> None: ...
    @staticmethod
    def informTreeWidgetChange(item) -> None: ...
    def addTopLevelItem(self, item) -> None: ...
    def addTopLevelItems(self, items) -> None: ...
    def insertTopLevelItem(self, index, item) -> None: ...
    def insertTopLevelItems(self, index, items) -> None: ...
    def takeTopLevelItem(self, index): ...
    def topLevelItems(self): ...
    def clear(self) -> None: ...
    def invisibleRootItem(self): ...
    def itemFromIndex(self, index): ...
    def setColumnCount(self, c) -> None: ...

class TreeWidgetItem(QtWidgets.QTreeWidgetItem):
    def __init__(self, *args) -> None: ...
    def setChecked(self, column, checked) -> None: ...
    def isChecked(self, col): ...
    def setExpanded(self, exp) -> None: ...
    def isExpanded(self): ...
    def setWidget(self, column, widget) -> None: ...
    def removeWidget(self, column) -> None: ...
    def treeWidgetChanged(self) -> None: ...
    def childItems(self): ...
    def addChild(self, child) -> None: ...
    def addChildren(self, childs) -> None: ...
    def insertChild(self, index, child) -> None: ...
    def insertChildren(self, index, childs) -> None: ...
    def removeChild(self, child) -> None: ...
    def takeChild(self, index): ...
    def takeChildren(self): ...
    def setData(self, column, role, value) -> None: ...
    def itemClicked(self, col) -> None: ...

class InvisibleRootItem:
    def __init__(self, item) -> None: ...
    def addChild(self, child) -> None: ...
    def addChildren(self, childs) -> None: ...
    def insertChild(self, index, child) -> None: ...
    def insertChildren(self, index, childs) -> None: ...
    def removeChild(self, child) -> None: ...
    def takeChild(self, index): ...
    def takeChildren(self): ...
    def __getattr__(self, attr): ...
