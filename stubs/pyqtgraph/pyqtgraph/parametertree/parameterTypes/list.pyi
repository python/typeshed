from _typeshed import Incomplete

from ..Parameter import Parameter
from .basetypes import WidgetParameterItem

class ListParameterItem(WidgetParameterItem):
    targetValue: Incomplete
    def __init__(self, param, depth) -> None: ...
    widget: Incomplete
    def makeWidget(self): ...
    def value(self): ...
    def setValue(self, val) -> None: ...
    def limitsChanged(self, param, limits) -> None: ...
    def updateDisplayLabel(self, value=None) -> None: ...

class ListParameter(Parameter):
    itemClass = ListParameterItem
    forward: Incomplete
    reverse: Incomplete
    def __init__(self, **opts) -> None: ...
    def setLimits(self, limits) -> None: ...
    @staticmethod
    def mapping(limits): ...
