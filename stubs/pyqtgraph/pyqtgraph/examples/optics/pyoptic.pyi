from _typeshed import Incomplete

import pyqtgraph as pg
from pyqtgraph.Qt import QtCore

class GlassDB:
    data: Incomplete
    def __init__(self, fileName: str = "schott_glasses.csv") -> None: ...
    def ior(self, glass, wl): ...
    def transmissionCurve(self, glass): ...

GLASSDB: Incomplete

def wlPen(wl): ...

class ParamObj:
    def __init__(self) -> None: ...
    def __setitem__(self, item, val) -> None: ...
    def setParam(self, param, val) -> None: ...
    def setParams(self, **params) -> None: ...
    def paramStateChanged(self) -> None: ...
    def __getitem__(self, item): ...
    def __len__(self) -> int: ...
    def getParam(self, param): ...

class Optic(pg.GraphicsObject, ParamObj):
    sigStateChanged: Incomplete
    gitem: Incomplete
    surfaces: Incomplete
    roi: Incomplete
    def __init__(self, gitem, **params) -> None: ...
    def updateTransform(self) -> None: ...
    def setParam(self, param, val) -> None: ...
    def paramStateChanged(self) -> None: ...
    def roiChanged(self, *args) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    def ior(self, wavelength): ...

class Lens(Optic):
    def __init__(self, **params) -> None: ...
    def propagateRay(self, ray): ...

class Mirror(Optic):
    def __init__(self, **params) -> None: ...
    def propagateRay(self, ray): ...

class CircularSolid(pg.GraphicsObject, ParamObj):
    surfaces: Incomplete
    pen: Incomplete
    brush: Incomplete
    def __init__(self, pen=None, brush=None, **opts) -> None: ...
    def paramStateChanged(self) -> None: ...
    path: Incomplete
    def updateSurfaces(self) -> None: ...
    def boundingRect(self): ...
    def shape(self): ...
    def paint(self, p, *args) -> None: ...

class CircleSurface(pg.GraphicsObject):
    r: Incomplete
    d: Incomplete
    def __init__(self, radius=None, diameter=None) -> None: ...
    def setParams(self, r, d) -> None: ...
    path: Incomplete
    h2: Incomplete
    def mkPath(self) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    def intersectRay(self, ray): ...

class Ray(pg.GraphicsObject, ParamObj):
    sigStateChanged: Incomplete
    params: Incomplete
    children: Incomplete
    def __init__(self, **params) -> None: ...
    def clearChildren(self) -> None: ...
    def paramStateChanged(self) -> None: ...
    def addChild(self, ch) -> None: ...
    def currentState(self, relativeTo=None): ...
    def setEnd(self, end) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    path: Incomplete
    def mkPath(self) -> None: ...

def trace(rays, optics) -> None: ...

class Tracer(QtCore.QObject):
    optics: Incomplete
    rays: Incomplete
    def __init__(self, rays, optics) -> None: ...
    def trace(self) -> None: ...
