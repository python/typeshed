from _typeshed import Incomplete

from ..Qt import QtWidgets

__all__ = ["GraphicsScene"]

class GraphicsScene(QtWidgets.QGraphicsScene):
    sigMouseHover: Incomplete
    sigMouseMoved: Incomplete
    sigMouseClicked: Incomplete
    sigPrepareForPaint: Incomplete
    sigItemAdded: Incomplete
    sigItemRemoved: Incomplete
    ExportDirectory: Incomplete
    exportDirectory: Incomplete
    clickEvents: Incomplete
    dragButtons: Incomplete
    mouseGrabber: Incomplete
    dragItem: Incomplete
    lastDrag: Incomplete
    hoverItems: Incomplete
    lastHoverEvent: Incomplete
    minDragTime: float
    contextMenu: Incomplete
    exportDialog: Incomplete
    def __init__(self, clickRadius: int = 2, moveDistance: int = 5, parent=None) -> None: ...
    def render(self, *args): ...
    def prepareForPaint(self) -> None: ...
    def setClickRadius(self, r: int): ...
    def setMoveDistance(self, d) -> None: ...
    def mousePressEvent(self, ev) -> None: ...
    def mouseMoveEvent(self, ev) -> None: ...
    def leaveEvent(self, ev) -> None: ...
    def mouseReleaseEvent(self, ev) -> None: ...
    def mouseDoubleClickEvent(self, ev) -> None: ...
    def sendHoverEvents(self, ev, exitOnly: bool = False) -> None: ...
    def sendDragEvent(self, ev, init: bool = False, final: bool = False): ...
    def sendClickEvent(self, ev): ...
    def addItem(self, item): ...
    def removeItem(self, item): ...
    def itemsNearEvent(self, event, selMode=..., sortOrder=..., hoverable: bool = False): ...
    def getViewWidget(self): ...
    def addParentContextMenus(self, item, menu, event): ...
    contextMenuItem: Incomplete
    def getContextMenus(self, event): ...
    def showExportDialog(self) -> None: ...
