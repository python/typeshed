def downsample(data, n, axis: int = 0, xvals: str = "subsample"): ...
def applyFilter(data, b, a, padding: int = 100, bidir: bool = True): ...
def besselFilter(data, cutoff, order: int = 1, dt=None, btype: str = "low", bidir: bool = True): ...
def butterworthFilter(
    data,
    wPass,
    wStop=None,
    gPass: float = 2.0,
    gStop: float = 20.0,
    order: int = 1,
    dt=None,
    btype: str = "low",
    bidir: bool = True,
): ...
def rollingSum(data, n): ...
def mode(data, bins=None): ...
def modeFilter(data, window: int = 500, step=None, bins=None): ...
def denoise(data, radius: int = 2, threshold: int = 4): ...
def adaptiveDetrend(data, x=None, threshold: float = 3.0): ...
def histogramDetrend(data, window: int = 500, bins: int = 50, threshold: float = 3.0, offsetOnly: bool = False): ...
def concatenateColumns(data): ...
def suggestDType(x): ...
def removePeriodic(data, f0: float = 60.0, dt=None, harmonics: int = 10, samples: int = 4): ...
