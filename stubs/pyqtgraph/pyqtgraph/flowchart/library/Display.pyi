from _typeshed import Incomplete

from ..Node import Node
from .common import CtrlNode

class PlotWidgetNode(Node):
    nodeName: str
    sigPlotChanged: Incomplete
    plot: Incomplete
    plots: Incomplete
    ui: Incomplete
    items: Incomplete
    def __init__(self, name) -> None: ...
    def disconnected(self, localTerm, remoteTerm) -> None: ...
    def setPlot(self, plot) -> None: ...
    def getPlot(self): ...
    def process(self, In, display: bool = True) -> None: ...
    def processBypassed(self, args) -> None: ...
    def ctrlWidget(self): ...
    def plotSelected(self, index) -> None: ...
    def setPlotList(self, plots) -> None: ...
    def updateUi(self) -> None: ...

class CanvasNode(Node):
    nodeName: str
    canvas: Incomplete
    items: Incomplete
    def __init__(self, name) -> None: ...
    def disconnected(self, localTerm, remoteTerm) -> None: ...
    def setCanvas(self, canvas) -> None: ...
    def getCanvas(self): ...
    def process(self, In, display: bool = True) -> None: ...

class PlotCurve(CtrlNode):
    nodeName: str
    uiTemplate: Incomplete
    item: Incomplete
    def __init__(self, name) -> None: ...
    def process(self, x, y, display: bool = True): ...

class ScatterPlot(CtrlNode):
    nodeName: str
    uiTemplate: Incomplete
    item: Incomplete
    keys: Incomplete
    def __init__(self, name) -> None: ...
    def process(self, input, display: bool = True): ...
    def updateKeys(self, data) -> None: ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
