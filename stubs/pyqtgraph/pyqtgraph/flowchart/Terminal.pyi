from _typeshed import Incomplete

from ..graphicsItems.GraphicsObject import GraphicsObject
from ..Qt import QtWidgets

__all__ = ["Terminal", "TerminalGraphicsItem"]

class Terminal:
    valueOk: Incomplete
    def __init__(
        self,
        node,
        name,
        io,
        optional: bool = False,
        multi: bool = False,
        pos=None,
        renamable: bool = False,
        removable: bool = False,
        multiable: bool = False,
        bypass=None,
    ) -> None: ...
    def value(self, term=None): ...
    def bypassValue(self): ...
    def setValue(self, val, process: bool = True) -> None: ...
    def setOpts(self, **opts) -> None: ...
    def connected(self, term) -> None: ...
    def disconnected(self, term) -> None: ...
    def inputChanged(self, term, process: bool = True) -> None: ...
    def valueIsAcceptable(self): ...
    def setValueAcceptable(self, v: bool = True) -> None: ...
    def connections(self): ...
    def node(self): ...
    def isInput(self): ...
    def isMultiValue(self): ...
    def setMultiValue(self, multi) -> None: ...
    def isOutput(self): ...
    def isRenamable(self): ...
    def isRemovable(self): ...
    def isMultiable(self): ...
    def name(self): ...
    def graphicsItem(self): ...
    def isConnected(self): ...
    def connectedTo(self, term): ...
    def hasInput(self): ...
    def inputTerminals(self): ...
    def dependentNodes(self): ...
    def connectTo(self, term, connectionItem=None): ...
    def disconnectFrom(self, term) -> None: ...
    def disconnectAll(self) -> None: ...
    def recolor(self, color=None, recurse: bool = True) -> None: ...
    def rename(self, name) -> None: ...
    def __hash__(self): ...
    def close(self) -> None: ...
    def saveState(self): ...
    def __lt__(self, other): ...

class TextItem(QtWidgets.QGraphicsTextItem):
    on_update: Incomplete
    def __init__(self, text, parent, on_update) -> None: ...
    def focusOutEvent(self, ev) -> None: ...
    def keyPressEvent(self, ev) -> None: ...

class TerminalGraphicsItem(GraphicsObject):
    term: Incomplete
    brush: Incomplete
    box: Incomplete
    label: Incomplete
    newConnection: Incomplete
    menu: Incomplete
    def __init__(self, term, parent=None) -> None: ...
    def labelChanged(self) -> None: ...
    def termRenamed(self, name) -> None: ...
    def setBrush(self, brush) -> None: ...
    def disconnect(self, target) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    anchorPos: Incomplete
    def setAnchor(self, x, y) -> None: ...
    def updateConnections(self) -> None: ...
    def mousePressEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def raiseContextMenu(self, ev) -> None: ...
    def getMenu(self): ...
    def toggleMulti(self) -> None: ...
    def removeSelf(self) -> None: ...
    def mouseDragEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def connectPoint(self): ...
    def nodeMoved(self) -> None: ...

class ConnectionItem(GraphicsObject):
    source: Incomplete
    target: Incomplete
    length: int
    hovered: bool
    path: Incomplete
    shapePath: Incomplete
    style: Incomplete
    def __init__(self, source, target=None) -> None: ...
    def close(self) -> None: ...
    def setTarget(self, target) -> None: ...
    def setStyle(self, **kwds) -> None: ...
    def updateLine(self) -> None: ...
    def generatePath(self, start, stop): ...
    def keyPressEvent(self, ev) -> None: ...
    def mousePressEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def boundingRect(self): ...
    def viewRangeChanged(self) -> None: ...
    def shape(self): ...
    def paint(self, p, *args) -> None: ...
