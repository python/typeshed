from _typeshed import Incomplete

from ..graphicsItems.GraphicsObject import GraphicsObject
from ..Qt import QtCore, QtWidgets

__all__ = ["Node", "NodeGraphicsItem"]

class Node(QtCore.QObject):
    sigOutputChanged: Incomplete
    sigClosed: Incomplete
    sigRenamed: Incomplete
    sigTerminalRenamed: Incomplete
    sigTerminalAdded: Incomplete
    sigTerminalRemoved: Incomplete
    bypassButton: Incomplete
    terminals: Incomplete
    exception: Incomplete
    def __init__(
        self, name, terminals=None, allowAddInput: bool = False, allowAddOutput: bool = False, allowRemove: bool = True
    ) -> None: ...
    def nextTerminalName(self, name): ...
    def addInput(self, name: str = "Input", **args): ...
    def addOutput(self, name: str = "Output", **args): ...
    def removeTerminal(self, term) -> None: ...
    def terminalRenamed(self, term, oldName) -> None: ...
    def addTerminal(self, name, **opts): ...
    def inputs(self): ...
    def outputs(self): ...
    def process(self, **kargs): ...
    def graphicsItem(self): ...
    def __getitem__(self, item): ...
    def name(self): ...
    def rename(self, name) -> None: ...
    def dependentNodes(self): ...
    def ctrlWidget(self) -> None: ...
    def bypass(self, byp) -> None: ...
    def isBypassed(self): ...
    def setInput(self, **args) -> None: ...
    def inputValues(self): ...
    def outputValues(self): ...
    def connected(self, localTerm, remoteTerm) -> None: ...
    def disconnected(self, localTerm, remoteTerm) -> None: ...
    def update(self, signal: bool = True) -> None: ...
    def processBypassed(self, args): ...
    def setOutput(self, **vals) -> None: ...
    def setOutputNoSignal(self, **vals) -> None: ...
    def setException(self, exc) -> None: ...
    def clearException(self) -> None: ...
    def recolor(self) -> None: ...
    def saveState(self): ...
    def restoreState(self, state) -> None: ...
    def saveTerminals(self): ...
    def restoreTerminals(self, state) -> None: ...
    def clearTerminals(self) -> None: ...
    def close(self) -> None: ...
    def disconnectAll(self) -> None: ...

class TextItem(QtWidgets.QGraphicsTextItem):
    on_update: Incomplete
    def __init__(self, text, parent, on_update) -> None: ...
    def focusOutEvent(self, ev) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def mousePressEvent(self, ev) -> None: ...

class NodeGraphicsItem(GraphicsObject):
    pen: Incomplete
    selectPen: Incomplete
    brush: Incomplete
    hoverBrush: Incomplete
    selectBrush: Incomplete
    hovered: bool
    node: Incomplete
    bounds: Incomplete
    nameItem: Incomplete
    menu: Incomplete
    def __init__(self, node) -> None: ...
    def setTitleOffset(self, new_offset) -> None: ...
    def titleOffset(self): ...
    def setTerminalOffset(self, new_offset) -> None: ...
    def terminalOffset(self): ...
    def labelChanged(self) -> None: ...
    def setPen(self, *args, **kwargs) -> None: ...
    def setBrush(self, brush) -> None: ...
    terminals: Incomplete
    def updateTerminals(self) -> None: ...
    def boundingRect(self): ...
    def paint(self, p, *args) -> None: ...
    def mousePressEvent(self, ev) -> None: ...
    def mouseClickEvent(self, ev) -> None: ...
    def mouseDragEvent(self, ev) -> None: ...
    def hoverEvent(self, ev) -> None: ...
    def keyPressEvent(self, ev) -> None: ...
    def itemChange(self, change, val): ...
    def getMenu(self): ...
    def raiseContextMenu(self, ev) -> None: ...
    def buildMenu(self) -> None: ...
    def addInputFromMenu(self) -> None: ...
    def addOutputFromMenu(self) -> None: ...
