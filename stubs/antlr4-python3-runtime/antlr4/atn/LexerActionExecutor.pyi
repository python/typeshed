from _typeshed import Incomplete

from antlr4.atn.LexerAction import LexerAction as LexerAction, LexerIndexedCustomAction as LexerIndexedCustomAction
from antlr4.InputStream import InputStream as InputStream

Lexer: Incomplete

class LexerActionExecutor:
    lexerActions: Incomplete
    hashCode: Incomplete
    def __init__(self, lexerActions: list[LexerAction] = ...) -> None: ...
    @staticmethod
    def append(lexerActionExecutor: LexerActionExecutor, lexerAction: LexerAction) -> Incomplete: ...
    def fixOffsetBeforeMatch(self, offset: int) -> Incomplete: ...
    def execute(self, lexer: Lexer, input: InputStream, startIndex: int) -> Incomplete: ...
    def __hash__(self) -> Incomplete: ...
    def __eq__(self, other: Incomplete) -> Incomplete: ...
