from _typeshed import Incomplete
from collections.abc import Generator

class VendorImporter:
    root_name: Incomplete
    vendored_names: Incomplete
    vendor_pkg: Incomplete
    def __init__(self, root_name, vendored_names=(), vendor_pkg: Incomplete | None = None) -> None: ...
    @property
    def search_path(self) -> Generator[Incomplete, None, None]: ...
    def load_module(self, fullname): ...
    def create_module(self, spec): ...
    def exec_module(self, module) -> None: ...
    def find_spec(self, fullname, path: Incomplete | None = None, target: Incomplete | None = None): ...
    def install(self) -> None: ...

names: Incomplete
