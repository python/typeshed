from typing import Any

class Command:
    sub_commands: Any
    distribution: Any
    verbose: Any
    force: Any
    help: int
    finalized: int
    def __init__(self, dist) -> None: ...
    def __getattr__(self, attr): ...
    def ensure_finalized(self) -> None: ...
    def initialize_options(self) -> None: ...
    def finalize_options(self) -> None: ...
    def dump_options(self, header: Any | None = ..., indent: str = ...) -> None: ...
    def run(self) -> None: ...
    def announce(self, msg, level: int = ...) -> None: ...
    def debug_print(self, msg) -> None: ...
    def ensure_string(self, option, default: Any | None = ...) -> None: ...
    def ensure_string_list(self, option) -> None: ...
    def ensure_filename(self, option) -> None: ...
    def ensure_dirname(self, option) -> None: ...
    def get_command_name(self): ...
    def set_undefined_options(self, src_cmd, *option_pairs) -> None: ...
    def get_finalized_command(self, command, create: int = ...): ...
    def reinitialize_command(self, command, reinit_subcommands: int = ...): ...
    def run_command(self, command) -> None: ...
    def get_sub_commands(self): ...
    def warn(self, msg) -> None: ...
    def execute(self, func, args, msg: Any | None = ..., level: int = ...) -> None: ...
    def mkpath(self, name, mode: int = ...) -> None: ...
    def copy_file(
        self, infile, outfile, preserve_mode: int = ..., preserve_times: int = ..., link: Any | None = ..., level: int = ...
    ): ...
    def copy_tree(
        self, infile, outfile, preserve_mode: int = ..., preserve_times: int = ..., preserve_symlinks: int = ..., level: int = ...
    ): ...
    def move_file(self, src, dst, level: int = ...): ...
    def spawn(self, cmd, search_path: int = ..., level: int = ...) -> None: ...
    def make_archive(
        self,
        base_name,
        format,
        root_dir: Any | None = ...,
        base_dir: Any | None = ...,
        owner: Any | None = ...,
        group: Any | None = ...,
    ): ...
    def make_file(
        self, infiles, outfile, func, args, exec_msg: Any | None = ..., skip_msg: Any | None = ..., level: int = ...
    ) -> None: ...
