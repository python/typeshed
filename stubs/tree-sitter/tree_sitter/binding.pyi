from typing import Any, ClassVar

class Node:
    child_count: ClassVar[getset_descriptor] = ...
    children: ClassVar[getset_descriptor] = ...
    end_byte: ClassVar[getset_descriptor] = ...
    end_point: ClassVar[getset_descriptor] = ...
    has_changes: ClassVar[getset_descriptor] = ...
    has_error: ClassVar[getset_descriptor] = ...
    is_missing: ClassVar[getset_descriptor] = ...
    is_named: ClassVar[getset_descriptor] = ...
    named_child_count: ClassVar[getset_descriptor] = ...
    next_named_sibling: ClassVar[getset_descriptor] = ...
    next_sibling: ClassVar[getset_descriptor] = ...
    parent: ClassVar[getset_descriptor] = ...
    prev_named_sibling: ClassVar[getset_descriptor] = ...
    prev_sibling: ClassVar[getset_descriptor] = ...
    start_byte: ClassVar[getset_descriptor] = ...
    start_point: ClassVar[getset_descriptor] = ...
    text: ClassVar[getset_descriptor] = ...
    type: ClassVar[getset_descriptor] = ...
    __hash__: ClassVar[None] = ...
    def child_by_field_id(self, *args, **kwargs) -> Any: ...
    def child_by_field_name(self, *args, **kwargs) -> Any: ...
    def sexp(self, *args, **kwargs) -> Any: ...
    def walk(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...

class Parser:
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def parse(self, *args, **kwargs) -> Any: ...
    def set_language(self, *args, **kwargs) -> Any: ...

class Query:
    def captures(self, *args, **kwargs) -> Any: ...
    def matches(self, *args, **kwargs) -> Any: ...

class Tree:
    root_node: ClassVar[getset_descriptor] = ...
    text: ClassVar[getset_descriptor] = ...
    def edit(self, *args, **kwargs) -> Any: ...
    def walk(self, *args, **kwargs) -> Any: ...

class TreeCursor:
    node: ClassVar[getset_descriptor] = ...
    def current_field_name(self, *args, **kwargs) -> Any: ...
    def goto_first_child(self, *args, **kwargs) -> Any: ...
    def goto_next_sibling(self, *args, **kwargs) -> Any: ...
    def goto_parent(self, *args, **kwargs) -> Any: ...

def _language_field_id_for_name(*args, **kwargs) -> Any: ...
def _language_query(*args, **kwargs) -> Any: ...
