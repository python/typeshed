import optparse
import threading
from _typeshed import Incomplete

SUCCESS: str
ERROR: str
WARNING: str
MAX_EVENT_BODY_LENGTH: int

class Timeout(Exception): ...

class OutputReader(threading.Thread):
    daemon: bool
    def __init__(self, proc_out, fwd_out: Incomplete | None = None) -> None: ...
    def run(self) -> None: ...
    @property
    def content(self): ...

def poll_proc(proc, sleep_interval, timeout): ...
def execute(cmd, cmd_timeout, sigterm_timeout, sigkill_timeout, proc_poll_interval, buffer_outs): ...
def trim_text(text, max_len): ...
def build_event_body(cmd, returncode, stdout, stderr, notifications): ...
def generate_warning_codes(option, opt, options_warning): ...

class DogwrapOption(optparse.Option):
    TYPES: Incomplete
    TYPE_CHECKER: Incomplete

def parse_options(raw_args: Incomplete | None = None): ...
def main() -> None: ...
