from _typeshed import Incomplete

class DatadogException(Exception): ...

class ProxyError(DatadogException):
    def __init__(self, method, url, exception) -> None: ...

class ClientError(DatadogException):
    def __init__(self, method, url, exception) -> None: ...

class HttpTimeout(DatadogException):
    def __init__(self, method, url, timeout) -> None: ...

class HttpBackoff(DatadogException):
    def __init__(self, backoff_period) -> None: ...

class HTTPError(DatadogException):
    def __init__(self, status_code: Incomplete | None = None, reason: Incomplete | None = None) -> None: ...

class ApiError(DatadogException): ...
class ApiNotInitialized(DatadogException): ...
