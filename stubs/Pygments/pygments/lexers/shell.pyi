from pygments.lexer import Lexer, RegexLexer
from typing import Any

class BashLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    tokens: Any = ...
    def analyse_text(text: Any): ...

class SlurmBashLexer(BashLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    EXTRA_KEYWORDS: Any = ...
    def get_tokens_unprocessed(self, text: Any) -> None: ...

class ShellSessionBaseLexer(Lexer):
    def get_tokens_unprocessed(self, text: Any) -> None: ...

class BashSessionLexer(ShellSessionBaseLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...

class BatchLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    flags: Any = ...
    tokens: Any = ...

class MSDOSSessionLexer(ShellSessionBaseLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...

class TcshLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    tokens: Any = ...

class TcshSessionLexer(ShellSessionBaseLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...

class PowerShellLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    flags: Any = ...
    keywords: Any = ...
    operators: Any = ...
    verbs: Any = ...
    aliases_: Any = ...
    commenthelp: Any = ...
    tokens: Any = ...

class PowerShellSessionLexer(ShellSessionBaseLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...

class FishShellLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    tokens: Any = ...

class ExeclineLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    tokens: Any = ...
    def analyse_text(text: Any): ...
