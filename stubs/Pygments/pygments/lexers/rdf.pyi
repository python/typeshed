from pygments.lexer import RegexLexer
from typing import Any

class SparqlLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    PN_CHARS_BASE_GRP: str = ...
    PN_CHARS_U_GRP: Any = ...
    PN_CHARS_GRP: Any = ...
    HEX_GRP: str = ...
    PN_LOCAL_ESC_CHARS_GRP: str = ...
    PN_CHARS_BASE: Any = ...
    PN_CHARS_U: Any = ...
    PN_CHARS: Any = ...
    HEX: Any = ...
    PN_LOCAL_ESC_CHARS: Any = ...
    IRIREF: str = ...
    BLANK_NODE_LABEL: Any = ...
    PN_PREFIX: Any = ...
    VARNAME: Any = ...
    PERCENT: Any = ...
    PN_LOCAL_ESC: Any = ...
    PLX: Any = ...
    PN_LOCAL: Any = ...
    EXPONENT: str = ...
    tokens: Any = ...

class TurtleLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    PN_CHARS_BASE_GRP: str = ...
    PN_CHARS_U_GRP: Any = ...
    PN_CHARS_GRP: Any = ...
    PN_CHARS: Any = ...
    PN_CHARS_BASE: Any = ...
    PN_PREFIX: Any = ...
    HEX_GRP: str = ...
    HEX: Any = ...
    PERCENT: Any = ...
    PN_LOCAL_ESC_CHARS_GRP: str = ...
    PN_LOCAL_ESC_CHARS: Any = ...
    PN_LOCAL_ESC: Any = ...
    PLX: Any = ...
    PN_LOCAL: Any = ...
    patterns: Any = ...
    tokens: Any = ...
    def analyse_text(text: Any): ...

class ShExCLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    PN_CHARS_BASE_GRP: str = ...
    PN_CHARS_U_GRP: Any = ...
    PN_CHARS_GRP: Any = ...
    HEX_GRP: str = ...
    PN_LOCAL_ESC_CHARS_GRP: str = ...
    PN_CHARS_BASE: Any = ...
    PN_CHARS_U: Any = ...
    PN_CHARS: Any = ...
    HEX: Any = ...
    PN_LOCAL_ESC_CHARS: Any = ...
    UCHAR_NO_BACKSLASH: Any = ...
    UCHAR: Any = ...
    IRIREF: Any = ...
    BLANK_NODE_LABEL: Any = ...
    PN_PREFIX: Any = ...
    PERCENT: Any = ...
    PN_LOCAL_ESC: Any = ...
    PLX: Any = ...
    PN_LOCAL: Any = ...
    EXPONENT: str = ...
    tokens: Any = ...
