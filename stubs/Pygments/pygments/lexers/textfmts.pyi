from pygments.lexer import RegexLexer
from typing import Any

class IrcLogsLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    flags: Any = ...
    timestamp: str = ...
    tokens: Any = ...

class GettextLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    tokens: Any = ...

class HttpLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    flags: Any = ...
    content_type: Any = ...
    def get_tokens_unprocessed(self, text: Any, stack: Any = ...): ...
    def header_callback(self, match: Any) -> None: ...
    def continuous_header_callback(self, match: Any) -> None: ...
    def content_callback(self, match: Any) -> None: ...
    tokens: Any = ...
    def analyse_text(text: Any): ...

class TodotxtLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    mimetypes: Any = ...
    CompleteTaskText: Any = ...
    IncompleteTaskText: Any = ...
    Priority: Any = ...
    Date: Any = ...
    Project: Any = ...
    Context: Any = ...
    date_regex: str = ...
    priority_regex: str = ...
    project_regex: str = ...
    context_regex: str = ...
    complete_one_date_regex: Any = ...
    complete_two_date_regex: Any = ...
    priority_date_regex: Any = ...
    tokens: Any = ...

class NotmuchLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    tokens: Any = ...
    def analyse_text(text: Any): ...
    body_lexer: Any = ...
    def __init__(self, **options: Any) -> None: ...

class KernelLogLexer(RegexLexer):
    name: str = ...
    aliases: Any = ...
    filenames: Any = ...
    tokens: Any = ...
