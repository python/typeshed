from _typeshed import Incomplete

from django.contrib import admin

from .forms import ConfirmImportForm, ExportForm, ImportForm
from .mixins import BaseExportMixin, BaseImportMixin

logger: Incomplete

class ImportExportMixinBase:
    def __init__(self, *args, **kwargs) -> None: ...
    base_change_list_template: Incomplete
    change_list_template: Incomplete
    def init_change_list_template(self) -> None: ...
    def get_model_info(self): ...
    def changelist_view(self, request, extra_context: Incomplete | None = None): ...

class ImportMixin(BaseImportMixin, ImportExportMixinBase):
    import_export_change_list_template: str
    import_template_name: str
    import_form_class = ImportForm
    confirm_form_class = ConfirmImportForm
    from_encoding: str
    skip_admin_log: Incomplete
    tmp_storage_class: Incomplete
    def get_skip_admin_log(self): ...
    def get_tmp_storage_class(self): ...
    def has_import_permission(self, request): ...
    def get_urls(self): ...
    def process_import(self, request, *args, **kwargs): ...
    def process_dataset(self, dataset, confirm_form, request, *args, rollback_on_validation_errors: bool = False, **kwargs): ...
    def process_result(self, result, request): ...
    def generate_log_entries(self, result, request) -> None: ...
    def add_success_message(self, result, request) -> None: ...
    def get_import_context_data(self, **kwargs): ...
    def get_context_data(self, **kwargs): ...
    def get_import_form(self): ...
    def get_confirm_import_form(self): ...
    def get_form_kwargs(self, form, *args, **kwargs): ...
    def create_import_form(self, request): ...
    def get_import_form_class(self, request): ...
    def get_import_form_kwargs(self, request): ...
    def get_import_form_initial(self, request): ...
    def create_confirm_form(self, request, import_form: Incomplete | None = None): ...
    def get_confirm_form_class(self, request): ...
    def get_confirm_form_kwargs(self, request, import_form: Incomplete | None = None): ...
    def get_confirm_form_initial(self, request, import_form): ...
    def get_import_data_kwargs(self, request, *args, **kwargs): ...
    def write_to_tmp_storage(self, import_file, input_format): ...
    def add_data_read_fail_error_to_form(self, form, e) -> None: ...
    def import_action(self, request, *args, **kwargs): ...
    def changelist_view(self, request, extra_context: Incomplete | None = None): ...

class ExportMixin(BaseExportMixin, ImportExportMixinBase):
    import_export_change_list_template: str
    export_template_name: str
    to_encoding: Incomplete
    export_form_class = ExportForm
    def get_urls(self): ...
    def has_export_permission(self, request): ...
    def get_export_queryset(self, request): ...
    def get_export_data(self, file_format, queryset, *args, **kwargs): ...
    def get_export_context_data(self, **kwargs): ...
    def get_context_data(self, **kwargs): ...
    def get_export_form(self): ...
    def get_export_form_class(self): ...
    def export_action(self, request, *args, **kwargs): ...
    def changelist_view(self, request, extra_context: Incomplete | None = None): ...
    def get_export_filename(self, request, queryset, file_format): ...

class ImportExportMixin(ImportMixin, ExportMixin):
    import_export_change_list_template: str

class ImportExportModelAdmin(ImportExportMixin, admin.ModelAdmin): ...

class ExportActionMixin(ExportMixin):
    import_export_change_list_template: Incomplete
    action_form: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def export_admin_action(self, request, queryset): ...
    def get_actions(self, request): ...
    @property
    def media(self): ...

class ExportActionModelAdmin(ExportActionMixin, admin.ModelAdmin): ...
class ImportExportActionModelAdmin(ImportMixin, ExportActionModelAdmin): ...
