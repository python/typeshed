from _typeshed import Incomplete

class Format:
    def get_title(self): ...
    def create_dataset(self, in_stream) -> None: ...
    def export_data(self, dataset, **kwargs) -> None: ...
    def is_binary(self): ...
    def get_read_mode(self): ...
    def get_extension(self): ...
    def get_content_type(self): ...
    @classmethod
    def is_available(cls): ...
    def can_import(self): ...
    def can_export(self): ...

class TablibFormat(Format):
    TABLIB_MODULE: Incomplete
    CONTENT_TYPE: str
    encoding: Incomplete
    def __init__(self, encoding: Incomplete | None = None) -> None: ...
    def get_format(self): ...
    @classmethod
    def is_available(cls): ...
    def get_title(self): ...
    def create_dataset(self, in_stream, **kwargs): ...
    def export_data(self, dataset, **kwargs): ...
    def get_extension(self): ...
    def get_content_type(self): ...
    def can_import(self): ...
    def can_export(self): ...

class TextFormat(TablibFormat):
    def create_dataset(self, in_stream, **kwargs): ...
    def get_read_mode(self): ...
    def is_binary(self): ...

class CSV(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str

class JSON(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str

class YAML(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str

class TSV(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str
    def create_dataset(self, in_stream, **kwargs): ...

class ODS(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str

class HTML(TextFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str
    def export_data(self, dataset, **kwargs): ...

class XLS(TablibFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str
    def create_dataset(self, in_stream): ...

class XLSX(TablibFormat):
    TABLIB_MODULE: str
    CONTENT_TYPE: str
    def create_dataset(self, in_stream): ...
    def export_data(self, dataset, **kwargs): ...

DEFAULT_FORMATS: Incomplete
