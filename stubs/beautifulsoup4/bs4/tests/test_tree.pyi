from bs4 import BeautifulSoup as BeautifulSoup
from bs4.builder import HTMLParserTreeBuilder as HTMLParserTreeBuilder, builder_registry as builder_registry
from bs4.element import CData as CData, Comment as Comment, Declaration as Declaration, Doctype as Doctype, Formatter as Formatter, NavigableString as NavigableString, PY3K as PY3K, Script as Script, SoupStrainer as SoupStrainer, Stylesheet as Stylesheet, Tag as Tag, TemplateString as TemplateString
from bs4.testing import SoupTest as SoupTest, skipIf as skipIf
from pdb import set_trace as set_trace
from typing import Any

XML_BUILDER_PRESENT: Any
LXML_PRESENT: Any

class TreeTest(SoupTest):
    def assertSelects(self, tags, should_match) -> None: ...
    def assertSelectsIDs(self, tags, should_match) -> None: ...

class TestFind(TreeTest):
    def test_find_tag(self) -> None: ...
    def test_unicode_text_find(self) -> None: ...
    def test_unicode_attribute_find(self) -> None: ...
    def test_find_everything(self) -> None: ...
    def test_find_everything_with_name(self) -> None: ...

class TestFindAll(TreeTest):
    def test_find_all_text_nodes(self) -> None: ...
    def test_find_all_limit(self) -> None: ...
    def test_calling_a_tag_is_calling_findall(self) -> None: ...
    def test_find_all_with_self_referential_data_structure_does_not_cause_infinite_recursion(self) -> None: ...
    def test_find_all_resultset(self) -> None: ...

class TestFindAllBasicNamespaces(TreeTest):
    def test_find_by_namespaced_name(self) -> None: ...

class TestFindAllByName(TreeTest):
    tree: Any
    def setUp(self) -> None: ...
    def test_find_all_by_tag_name(self) -> None: ...
    def test_find_all_by_name_and_text(self) -> None: ...
    def test_find_all_on_non_root_element(self) -> None: ...
    def test_calling_element_invokes_find_all(self) -> None: ...
    def test_find_all_by_tag_strainer(self) -> None: ...
    def test_find_all_by_tag_names(self) -> None: ...
    def test_find_all_by_tag_dict(self) -> None: ...
    def test_find_all_by_tag_re(self) -> None: ...
    def test_find_all_with_tags_matching_method(self): ...
    def test_find_with_multi_valued_attribute(self) -> None: ...

class TestFindAllByAttribute(TreeTest):
    def test_find_all_by_attribute_name(self) -> None: ...
    def test_find_all_by_utf8_attribute_value(self) -> None: ...
    def test_find_all_by_attribute_dict(self) -> None: ...
    def test_find_all_by_class(self) -> None: ...
    def test_find_by_class_when_multiple_classes_present(self) -> None: ...
    def test_find_all_with_non_dictionary_for_attrs_finds_by_class(self): ...
    def test_find_all_with_string_for_attrs_finds_multiple_classes(self) -> None: ...
    def test_find_all_by_attribute_soupstrainer(self) -> None: ...
    def test_find_all_with_missing_attribute(self) -> None: ...
    def test_find_all_with_defined_attribute(self) -> None: ...
    def test_find_all_with_numeric_attribute(self) -> None: ...
    def test_find_all_with_list_attribute_values(self) -> None: ...
    def test_find_all_with_regular_expression_attribute_value(self) -> None: ...
    def test_find_by_name_and_containing_string(self) -> None: ...
    def test_find_by_name_and_containing_string_when_string_is_buried(self) -> None: ...
    def test_find_by_attribute_and_containing_string(self) -> None: ...

class TestSmooth(TreeTest):
    def test_smooth(self) -> None: ...

class TestIndex(TreeTest):
    def test_index(self) -> None: ...

class TestParentOperations(TreeTest):
    tree: Any
    start: Any
    def setUp(self) -> None: ...
    def test_parent(self) -> None: ...
    def test_parent_of_top_tag_is_soup_object(self) -> None: ...
    def test_soup_object_has_no_parent(self) -> None: ...
    def test_find_parents(self) -> None: ...
    def test_find_parent(self) -> None: ...
    def test_parent_of_text_element(self) -> None: ...
    def test_text_element_find_parent(self) -> None: ...
    def test_parent_generator(self) -> None: ...

class ProximityTest(TreeTest):
    tree: Any
    def setUp(self) -> None: ...

class TestNextOperations(ProximityTest):
    start: Any
    def setUp(self) -> None: ...
    def test_next(self) -> None: ...
    def test_next_of_last_item_is_none(self) -> None: ...
    def test_next_of_root_is_none(self) -> None: ...
    def test_find_all_next(self) -> None: ...
    def test_find_next(self) -> None: ...
    def test_find_next_for_text_element(self) -> None: ...
    def test_next_generator(self) -> None: ...

class TestPreviousOperations(ProximityTest):
    end: Any
    def setUp(self) -> None: ...
    def test_previous(self) -> None: ...
    def test_previous_of_first_item_is_none(self) -> None: ...
    def test_previous_of_root_is_none(self) -> None: ...
    def test_find_all_previous(self) -> None: ...
    def test_find_previous(self) -> None: ...
    def test_find_previous_for_text_element(self) -> None: ...
    def test_previous_generator(self) -> None: ...

class SiblingTest(TreeTest):
    tree: Any
    def setUp(self) -> None: ...

class TestNextSibling(SiblingTest):
    start: Any
    def setUp(self) -> None: ...
    def test_next_sibling_of_root_is_none(self) -> None: ...
    def test_next_sibling(self) -> None: ...
    def test_next_sibling_may_not_exist(self) -> None: ...
    def test_find_next_sibling(self) -> None: ...
    def test_next_siblings(self) -> None: ...
    def test_next_sibling_for_text_element(self) -> None: ...

class TestPreviousSibling(SiblingTest):
    end: Any
    def setUp(self) -> None: ...
    def test_previous_sibling_of_root_is_none(self) -> None: ...
    def test_previous_sibling(self) -> None: ...
    def test_previous_sibling_may_not_exist(self) -> None: ...
    def test_find_previous_sibling(self) -> None: ...
    def test_previous_siblings(self) -> None: ...
    def test_previous_sibling_for_text_element(self) -> None: ...

class TestTag(SoupTest):
    def test__should_pretty_print(self) -> None: ...

class TestTagCreation(SoupTest):
    def test_new_tag(self) -> None: ...
    def test_tag_inherits_self_closing_rules_from_builder(self) -> None: ...
    def test_new_string_creates_navigablestring(self) -> None: ...
    def test_new_string_can_create_navigablestring_subclass(self) -> None: ...

class TestTreeModification(SoupTest):
    def test_attribute_modification(self) -> None: ...
    def test_new_tag_creation(self) -> None: ...
    def test_append_to_contents_moves_tag(self) -> None: ...
    def test_replace_with_returns_thing_that_was_replaced(self) -> None: ...
    def test_unwrap_returns_thing_that_was_replaced(self) -> None: ...
    def test_replace_with_and_unwrap_give_useful_exception_when_tag_has_no_parent(self) -> None: ...
    def test_replace_tag_with_itself(self) -> None: ...
    def test_replace_tag_with_its_parent_raises_exception(self) -> None: ...
    def test_insert_tag_into_itself_raises_exception(self) -> None: ...
    def test_insert_beautifulsoup_object_inserts_children(self) -> None: ...
    def test_replace_with_maintains_next_element_throughout(self) -> None: ...
    def test_replace_final_node(self) -> None: ...
    def test_consecutive_text_nodes(self) -> None: ...
    def test_insert_string(self) -> None: ...
    def test_insert_tag(self) -> None: ...
    def test_append_child_thats_already_at_the_end(self) -> None: ...
    def test_extend(self) -> None: ...
    def test_extend_with_another_tags_contents(self) -> None: ...
    def test_move_tag_to_beginning_of_parent(self) -> None: ...
    def test_insert_works_on_empty_element_tag(self) -> None: ...
    def test_insert_before(self) -> None: ...
    def test_insert_multiple_before(self) -> None: ...
    def test_insert_after(self) -> None: ...
    def test_insert_multiple_after(self) -> None: ...
    def test_insert_after_raises_exception_if_after_has_no_meaning(self) -> None: ...
    def test_insert_before_raises_notimplementederror_if_before_has_no_meaning(self) -> None: ...
    def test_replace_with(self) -> None: ...
    def test_replace_first_child(self) -> None: ...
    def test_replace_last_child(self) -> None: ...
    def test_nested_tag_replace_with(self) -> None: ...
    def test_unwrap(self) -> None: ...
    def test_wrap(self) -> None: ...
    def test_wrap_extracts_tag_from_elsewhere(self) -> None: ...
    def test_wrap_puts_new_contents_at_the_end(self) -> None: ...
    def test_extract(self) -> None: ...
    def test_extract_distinguishes_between_identical_strings(self) -> None: ...
    def test_extract_multiples_of_same_tag(self) -> None: ...
    def test_extract_works_when_element_is_surrounded_by_identical_strings(self) -> None: ...
    def test_clear(self) -> None: ...
    def test_decompose(self) -> None: ...
    def test_string_set(self) -> None: ...
    def test_string_set_does_not_affect_original_string(self) -> None: ...
    def test_set_string_preserves_class_of_string(self) -> None: ...

class TestElementObjects(SoupTest):
    def test_len(self) -> None: ...
    def test_member_access_invokes_find(self) -> None: ...
    def test_deprecated_member_access(self) -> None: ...
    def test_has_attr(self) -> None: ...
    def test_attributes_come_out_in_alphabetical_order(self) -> None: ...
    def test_string(self) -> None: ...
    def test_empty_tag_has_no_string(self) -> None: ...
    def test_tag_with_multiple_children_has_no_string(self) -> None: ...
    def test_tag_with_recursive_string_has_string(self) -> None: ...
    def test_lack_of_string(self) -> None: ...
    def test_all_text(self) -> None: ...
    def test_get_text_ignores_special_string_containers(self) -> None: ...
    def test_all_strings_ignores_special_string_containers(self) -> None: ...

class TestCDAtaListAttributes(SoupTest):
    def test_single_value_becomes_list(self) -> None: ...
    def test_multiple_values_becomes_list(self) -> None: ...
    def test_multiple_values_separated_by_weird_whitespace(self) -> None: ...
    def test_attributes_joined_into_string_on_output(self) -> None: ...
    def test_get_attribute_list(self) -> None: ...
    def test_accept_charset(self) -> None: ...
    def test_cdata_attribute_applying_only_to_one_tag(self) -> None: ...
    def test_string_has_immutable_name_property(self) -> None: ...

class TestPersistence(SoupTest):
    page: str
    tree: Any
    def setUp(self) -> None: ...
    def test_pickle_and_unpickle_identity(self) -> None: ...
    def test_deepcopy_identity(self) -> None: ...
    def test_copy_preserves_encoding(self) -> None: ...
    def test_copy_preserves_builder_information(self) -> None: ...
    def test_unicode_pickle(self) -> None: ...
    def test_copy_navigablestring_is_not_attached_to_tree(self) -> None: ...
    def test_copy_navigablestring_subclass_has_same_type(self) -> None: ...
    def test_copy_entire_soup(self) -> None: ...
    def test_copy_tag_copies_contents(self) -> None: ...

class TestSubstitutions(SoupTest):
    def test_default_formatter_is_minimal(self) -> None: ...
    def test_formatter_html(self) -> None: ...
    def test_formatter_html5(self) -> None: ...
    def test_formatter_minimal(self) -> None: ...
    def test_formatter_null(self) -> None: ...
    def test_formatter_custom(self): ...
    def test_formatter_is_run_on_attribute_values(self): ...
    def test_formatter_skips_script_tag_for_html_documents(self) -> None: ...
    def test_formatter_skips_style_tag_for_html_documents(self) -> None: ...
    def test_prettify_leaves_preformatted_text_alone(self) -> None: ...
    def test_prettify_accepts_formatter_function(self): ...
    def test_prettify_outputs_unicode_by_default(self) -> None: ...
    def test_prettify_can_encode_data(self) -> None: ...
    def test_html_entity_substitution_off_by_default(self) -> None: ...
    def test_encoding_substitution(self) -> None: ...
    def test_encoding_substitution_doesnt_happen_if_tag_is_strained(self) -> None: ...

class TestEncoding(SoupTest):
    def test_unicode_string_can_be_encoded(self) -> None: ...
    def test_tag_containing_unicode_string_can_be_encoded(self) -> None: ...
    def test_encoding_substitutes_unrecognized_characters_by_default(self) -> None: ...
    def test_encoding_can_be_made_strict(self) -> None: ...
    def test_decode_contents(self) -> None: ...
    def test_encode_contents(self) -> None: ...
    def test_deprecated_renderContents(self) -> None: ...
    def test_repr(self) -> None: ...

class TestFormatter(SoupTest):
    def test_default_attributes(self) -> None: ...
    called_with: Any
    def test_sort_attributes(self) -> None: ...

class TestNavigableStringSubclasses(SoupTest):
    def test_cdata(self) -> None: ...
    count: int
    def test_cdata_is_never_formatted(self): ...
    def test_doctype_ends_in_newline(self) -> None: ...
    def test_declaration(self) -> None: ...
    def test_default_string_containers(self) -> None: ...

class TestSoupSelector(TreeTest):
    HTML: str
    soup: Any
    def setUp(self) -> None: ...
    def assertSelects(self, selector, expected_ids, **kwargs) -> None: ...
    assertSelect: Any
    def assertSelectMultiple(self, *tests) -> None: ...
    def test_one_tag_one(self) -> None: ...
    def test_one_tag_many(self) -> None: ...
    def test_select_one_returns_none_if_no_match(self) -> None: ...
    def test_tag_in_tag_one(self) -> None: ...
    def test_tag_in_tag_many(self) -> None: ...
    def test_limit(self) -> None: ...
    def test_tag_no_match(self) -> None: ...
    def test_invalid_tag(self) -> None: ...
    def test_select_dashed_tag_ids(self) -> None: ...
    def test_select_dashed_by_id(self) -> None: ...
    def test_dashed_tag_text(self) -> None: ...
    def test_select_dashed_matches_find_all(self) -> None: ...
    def test_header_tags(self) -> None: ...
    def test_class_one(self) -> None: ...
    def test_class_mismatched_tag(self) -> None: ...
    def test_one_id(self) -> None: ...
    def test_bad_id(self) -> None: ...
    def test_items_in_id(self) -> None: ...
    def test_a_bunch_of_emptys(self) -> None: ...
    def test_multi_class_support(self) -> None: ...
    def test_multi_class_selection(self) -> None: ...
    def test_child_selector(self) -> None: ...
    def test_child_selector_id(self) -> None: ...
    def test_attribute_equals(self) -> None: ...
    def test_attribute_tilde(self) -> None: ...
    def test_attribute_startswith(self) -> None: ...
    def test_attribute_endswith(self) -> None: ...
    def test_attribute_contains(self) -> None: ...
    def test_attribute_exact_or_hypen(self) -> None: ...
    def test_attribute_exists(self) -> None: ...
    def test_quoted_space_in_selector_name(self) -> None: ...
    def test_unsupported_pseudoclass(self) -> None: ...
    def test_nth_of_type(self) -> None: ...
    def test_nth_of_type_direct_descendant(self) -> None: ...
    def test_id_child_selector_nth_of_type(self) -> None: ...
    def test_select_on_element(self) -> None: ...
    def test_overspecified_child_id(self) -> None: ...
    def test_adjacent_sibling_selector(self) -> None: ...
    def test_general_sibling_selector(self) -> None: ...
    def test_dangling_combinator(self) -> None: ...
    def test_sibling_combinator_wont_select_same_tag_twice(self) -> None: ...
    def test_multiple_select(self) -> None: ...
    def test_multiple_select_with_no_space(self) -> None: ...
    def test_multiple_select_with_more_space(self) -> None: ...
    def test_multiple_select_duplicated(self) -> None: ...
    def test_multiple_select_sibling(self) -> None: ...
    def test_multiple_select_tag_and_direct_descendant(self) -> None: ...
    def test_multiple_select_direct_descendant_and_tags(self) -> None: ...
    def test_multiple_select_indirect_descendant(self) -> None: ...
    def test_invalid_multiple_select(self) -> None: ...
    def test_multiple_select_attrs(self) -> None: ...
    def test_multiple_select_ids(self) -> None: ...
    def test_multiple_select_nested(self) -> None: ...
    def test_select_duplicate_elements(self) -> None: ...
