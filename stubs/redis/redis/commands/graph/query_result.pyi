from typing import Any

LABELS_ADDED: str
NODES_CREATED: str
NODES_DELETED: str
RELATIONSHIPS_DELETED: str
PROPERTIES_SET: str
RELATIONSHIPS_CREATED: str
INDICES_CREATED: str
INDICES_DELETED: str
CACHED_EXECUTION: str
INTERNAL_EXECUTION_TIME: str
STATS: Any

class ResultSetColumnTypes:
    COLUMN_UNKNOWN: int
    COLUMN_SCALAR: int
    COLUMN_NODE: int
    COLUMN_RELATION: int

class ResultSetScalarTypes:
    VALUE_UNKNOWN: int
    VALUE_NULL: int
    VALUE_STRING: int
    VALUE_INTEGER: int
    VALUE_BOOLEAN: int
    VALUE_DOUBLE: int
    VALUE_ARRAY: int
    VALUE_EDGE: int
    VALUE_NODE: int
    VALUE_PATH: int
    VALUE_MAP: int
    VALUE_POINT: int

class QueryResult:
    graph: Any
    header: Any
    result_set: Any
    def __init__(self, graph, response, profile: bool = ...) -> None: ...
    def parse_results(self, raw_result_set) -> None: ...
    statistics: Any
    def parse_statistics(self, raw_statistics) -> None: ...
    def parse_header(self, raw_result_set): ...
    def parse_records(self, raw_result_set): ...
    def parse_entity_properties(self, props): ...
    def parse_string(self, cell): ...
    def parse_node(self, cell): ...
    def parse_edge(self, cell): ...
    def parse_path(self, cell): ...
    def parse_map(self, cell): ...
    def parse_point(self, cell): ...
    def parse_scalar(self, cell): ...
    def parse_profile(self, response) -> None: ...
    def is_empty(self): ...
    @property
    def labels_added(self): ...
    @property
    def nodes_created(self): ...
    @property
    def nodes_deleted(self): ...
    @property
    def properties_set(self): ...
    @property
    def relationships_created(self): ...
    @property
    def relationships_deleted(self): ...
    @property
    def indices_created(self): ...
    @property
    def indices_deleted(self): ...
    @property
    def cached_execution(self): ...
    @property
    def run_time_ms(self): ...
