from typing import Any, overload

import numpy

from . import _EncodedRLE

def iou(
    dt: numpy.typing.NDArray[numpy.uint32] | list[float] | list[_EncodedRLE],
    gt: numpy.typing.NDArray[numpy.uint32] | list[float] | list[_EncodedRLE],
    pyiscrowd: list[int] | numpy.typing.NDArray[numpy.uint8],
) -> list[Any] | numpy.typing.NDArray[numpy.float64]: ...
def merge(rleObjs: list[_EncodedRLE], intersect: int = ...) -> _EncodedRLE: ...
@overload
def frPyObjects(
    pyobj: numpy.typing.NDArray[numpy.uint32] | list[list[int]] | list[_EncodedRLE], h: int, w: int
) -> list[_EncodedRLE]: ...
@overload
def frPyObjects(pyobj: list[int] | _EncodedRLE, h: int, w: int) -> _EncodedRLE: ...
def encode(bimask: numpy.typing.NDArray[numpy.uint8]) -> _EncodedRLE: ...
def decode(rleObjs: _EncodedRLE) -> numpy.typing.NDArray[numpy.uint8]: ...
def area(rleObjs: _EncodedRLE) -> numpy.uint32: ...
def toBbox(rleObjs: _EncodedRLE) -> numpy.typing.NDArray[numpy.float64]: ...
