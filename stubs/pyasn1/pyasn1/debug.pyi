import logging
from _typeshed import Incomplete

class Printer:
    def __init__(
        self, logger: Incomplete | None = ..., handler: Incomplete | None = ..., formatter: Incomplete | None = ...
    ) -> None: ...
    def __call__(self, msg) -> None: ...

NullHandler = logging.NullHandler

class Debug:
    defaultPrinter: Incomplete
    def __init__(self, *flags, **options) -> None: ...
    def __call__(self, msg) -> None: ...
    def __and__(self, flag): ...
    def __rand__(self, flag): ...

def setLogger(userLogger) -> None: ...
def hexdump(octets): ...

class Scope:
    def __init__(self) -> None: ...
    def push(self, token) -> None: ...
    def pop(self): ...
