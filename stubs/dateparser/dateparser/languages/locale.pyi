from typing import Any, Optional

from dateparser.timezone_parser import pop_tz_offset_from_string, word_is_tz
from dateparser.utils import combine_dicts, normalize_unicode

from .dictionary import (
    ALWAYS_KEEP_TOKENS,
    Dictionary,
    NormalizedDictionary,
)

DIGIT_GROUP_PATTERN: Any
NUMERAL_PATTERN: Any

class Locale:
    shortname: Any = ...
    info: Any = ...
    def __init__(self, shortname: Any, language_info: Any) -> None: ...
    def is_applicable(self, date_string: Any, strip_timezone: bool = ..., settings: Optional[Any] = ...): ...
    def count_applicability(self, text: Any, strip_timezone: bool = ..., settings: Optional[Any] = ...): ...
    @staticmethod
    def clean_dictionary(dictionary: Any, threshold: int = ...): ...
    def translate(self, date_string: Any, keep_formatting: bool = ..., settings: Optional[Any] = ...): ...
    def translate_search(self, search_string: Any, settings: Optional[Any] = ...): ...
    def get_wordchars_for_detection(self, settings: Any): ...
    def to_parserinfo(self, base_cls: Any = ...): ...
