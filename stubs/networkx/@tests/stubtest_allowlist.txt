# overloaded class-decorators are not properly supported in type-checkers:
# - mypy: https://github.com/python/mypy/issues/16840
# - pyright: https://github.com/microsoft/pyright/issues/7167
networkx\.(algorithms\.)?(boundary\.)?edge_boundary
networkx\.(algorithms\.)?(bridges\.)?local_bridges
networkx\.(algorithms\.)?(clique\.)?node_clique_number
networkx\.(algorithms\.)?(shortest_paths\.)?(generic\.)?shortest_path
networkx\.(convert_matrix\.)?from_numpy_array
networkx\.(convert_matrix\.)?from_pandas_adjacency
networkx\.(convert_matrix\.)?from_pandas_edgelist
networkx\.(generators\.)?(random_clustered\.)?random_clustered_graph
networkx\.(relabel\.)?relabel_nodes

# Stubtest doesn't understand aliases of class-decorated methods (possibly https://github.com/python/mypy/issues/6700 )
networkx\.(algorithms\.)?(centrality\.)?(current_flow_closeness\.)?information_centrality
networkx\.(generators\.)?(random_graphs\.)?binomial_graph
networkx\.(generators\.)?(random_graphs\.)?erdos_renyi_graph

# Stubtest says: "runtime argument "backend" has a default value of type None, which is
#   incompatible with stub argument type builtins.str. This is often caused by overloads
#   failing to account for explicitly passing in the default value."
# Which is true, but would require some way of concatenating `backend` to ParamSpec.kwargs
networkx\.(utils\.backends\.)?_dispatch\.__call__

# TODO: stubtest does not like @cached_property https://github.com/python/mypy/issues/17625
# "is inconsistent, cannot reconcile @property on stub with runtime object"
networkx(\.classes(\.graph)?)?\.Graph\.(adj|degree|edges|nodes)
networkx(\.classes(\.multigraph)?)?\.MultiGraph\.(adj|degree|edges)
networkx(\.classes(\.digraph)?)?\.DiGraph\.(adj|degree|edges|in_degree|in_edges|out_degree|out_edges|pred|succ)
networkx(\.classes(\.multidigraph)?)?\.MultiDiGraph\.(adj|degree|edges|in_degree|in_edges|out_degree|out_edges|pred|succ)
