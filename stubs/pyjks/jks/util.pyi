from _typeshed import Incomplete

b8: Incomplete
b4: Incomplete
b2: Incomplete
b1: Incomplete
py23basestring: Incomplete
RSA_ENCRYPTION_OID: Incomplete
DSA_OID: Incomplete
DSA_WITH_SHA1_OID: Incomplete

class KeystoreException(Exception): ...
class KeystoreSignatureException(KeystoreException): ...
class DuplicateAliasException(KeystoreException): ...
class NotYetDecryptedException(KeystoreException): ...
class BadKeystoreFormatException(KeystoreException): ...
class BadDataLengthException(KeystoreException): ...
class BadPaddingException(KeystoreException): ...
class BadHashCheckException(KeystoreException): ...
class DecryptionFailureException(KeystoreException): ...
class UnsupportedKeystoreVersionException(KeystoreException): ...
class UnexpectedJavaTypeException(KeystoreException): ...
class UnexpectedAlgorithmException(KeystoreException): ...
class UnexpectedKeyEncodingException(KeystoreException): ...
class UnsupportedKeystoreTypeException(KeystoreException): ...
class UnsupportedKeystoreEntryTypeException(KeystoreException): ...
class UnsupportedKeyFormatException(KeystoreException): ...

class AbstractKeystore:
    store_type: Incomplete
    entries: Incomplete
    def __init__(self, store_type, entries) -> None: ...
    @classmethod
    def load(cls, filename, store_password, try_decrypt_keys: bool = True): ...
    def save(self, filename, store_password) -> None: ...

class AbstractKeystoreEntry:
    store_type: Incomplete
    alias: Incomplete
    timestamp: Incomplete
    def __init__(self, **kwargs) -> None: ...
    @classmethod
    def new(cls, alias) -> None: ...
    def is_decrypted(self) -> None: ...
    def decrypt(self, key_password) -> None: ...
    def encrypt(self, key_password) -> None: ...

def as_hex(ba): ...
def as_pem(der_bytes, type): ...
def bitstring_to_bytes(bitstr): ...
def xor_bytearrays(a, b): ...
def print_pem(der_bytes, type) -> None: ...
def pkey_as_pem(pk): ...
def strip_pkcs5_padding(m): ...
def strip_pkcs7_padding(m, block_size): ...
def add_pkcs7_padding(m, block_size): ...
