from typing import Any, List, TypeVar
from xml.etree.ElementTree import Element, ElementTree

from . import Markdown
from .util import Registry

_T = TypeVar("_T")

class State(List[_T]):
    def set(self, state: _T) -> None: ...
    def reset(self) -> None: ...
    def isstate(self, state: _T) -> bool: ...

class BlockParser:
    blockprocessors: Registry
    state: State
    md: Markdown
    def __init__(self, md: Markdown) -> None: ...
    @property
    def markdown(self): ...
    root: Element
    def parseDocument(self, lines: List[str]) -> ElementTree: ...
    def parseChunk(self, parent: Element, text: str) -> None: ...
    def parseBlocks(self, parent: Element, blocks: List[str]) -> None: ...
