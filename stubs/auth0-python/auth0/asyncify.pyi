# AUTOGENERATED BY scripts/sync_auth0_python.py
from typing import TypeVar, overload

from auth0.authentication.back_channel_login import BackChannelLogin as authentication_back_channel_loginBackChannelLogin
from auth0.authentication.base import AuthenticationBase as authentication_baseAuthenticationBase
from auth0.authentication.database import Database as authentication_databaseDatabase
from auth0.authentication.delegated import Delegated as authentication_delegatedDelegated
from auth0.authentication.enterprise import Enterprise as authentication_enterpriseEnterprise
from auth0.authentication.get_token import GetToken as authentication_get_tokenGetToken
from auth0.authentication.passwordless import Passwordless as authentication_passwordlessPasswordless
from auth0.authentication.pushed_authorization_requests import (
    PushedAuthorizationRequests as authentication_pushed_authorization_requestsPushedAuthorizationRequests,
)
from auth0.authentication.revoke_token import RevokeToken as authentication_revoke_tokenRevokeToken
from auth0.authentication.social import Social as authentication_socialSocial
from auth0.authentication.users import Users as authentication_usersUsers
from auth0.management.actions import Actions as management_actionsActions
from auth0.management.attack_protection import AttackProtection as management_attack_protectionAttackProtection
from auth0.management.blacklists import Blacklists as management_blacklistsBlacklists
from auth0.management.branding import Branding as management_brandingBranding
from auth0.management.client_credentials import ClientCredentials as management_client_credentialsClientCredentials
from auth0.management.client_grants import ClientGrants as management_client_grantsClientGrants
from auth0.management.clients import Clients as management_clientsClients
from auth0.management.connections import Connections as management_connectionsConnections
from auth0.management.custom_domains import CustomDomains as management_custom_domainsCustomDomains
from auth0.management.device_credentials import DeviceCredentials as management_device_credentialsDeviceCredentials
from auth0.management.email_templates import EmailTemplates as management_email_templatesEmailTemplates
from auth0.management.emails import Emails as management_emailsEmails
from auth0.management.grants import Grants as management_grantsGrants
from auth0.management.guardian import Guardian as management_guardianGuardian
from auth0.management.hooks import Hooks as management_hooksHooks
from auth0.management.jobs import Jobs as management_jobsJobs
from auth0.management.log_streams import LogStreams as management_log_streamsLogStreams
from auth0.management.logs import Logs as management_logsLogs
from auth0.management.organizations import Organizations as management_organizationsOrganizations
from auth0.management.prompts import Prompts as management_promptsPrompts
from auth0.management.resource_servers import ResourceServers as management_resource_serversResourceServers
from auth0.management.roles import Roles as management_rolesRoles
from auth0.management.rules import Rules as management_rulesRules
from auth0.management.rules_configs import RulesConfigs as management_rules_configsRulesConfigs
from auth0.management.stats import Stats as management_statsStats
from auth0.management.tenants import Tenants as management_tenantsTenants
from auth0.management.tickets import Tickets as management_ticketsTickets
from auth0.management.user_blocks import UserBlocks as management_user_blocksUserBlocks
from auth0.management.users import Users as management_usersUsers
from auth0.management.users_by_email import UsersByEmail as management_users_by_emailUsersByEmail

from ._asyncified.authentication.back_channel_login import (
    _BackChannelLoginAsync as authentication_back_channel_login_BackChannelLoginAsync,
)
from ._asyncified.authentication.base import _AuthenticationBaseAsync as authentication_base_AuthenticationBaseAsync
from ._asyncified.authentication.database import _DatabaseAsync as authentication_database_DatabaseAsync
from ._asyncified.authentication.delegated import _DelegatedAsync as authentication_delegated_DelegatedAsync
from ._asyncified.authentication.enterprise import _EnterpriseAsync as authentication_enterprise_EnterpriseAsync
from ._asyncified.authentication.get_token import _GetTokenAsync as authentication_get_token_GetTokenAsync
from ._asyncified.authentication.passwordless import _PasswordlessAsync as authentication_passwordless_PasswordlessAsync
from ._asyncified.authentication.pushed_authorization_requests import (
    _PushedAuthorizationRequestsAsync as authentication_pushed_authorization_requests_PushedAuthorizationRequestsAsync,
)
from ._asyncified.authentication.revoke_token import _RevokeTokenAsync as authentication_revoke_token_RevokeTokenAsync
from ._asyncified.authentication.social import _SocialAsync as authentication_social_SocialAsync
from ._asyncified.authentication.users import _UsersAsync as authentication_users_UsersAsync
from ._asyncified.management.actions import _ActionsAsync as management_actions_ActionsAsync
from ._asyncified.management.attack_protection import _AttackProtectionAsync as management_attack_protection_AttackProtectionAsync
from ._asyncified.management.blacklists import _BlacklistsAsync as management_blacklists_BlacklistsAsync
from ._asyncified.management.branding import _BrandingAsync as management_branding_BrandingAsync
from ._asyncified.management.client_credentials import (
    _ClientCredentialsAsync as management_client_credentials_ClientCredentialsAsync,
)
from ._asyncified.management.client_grants import _ClientGrantsAsync as management_client_grants_ClientGrantsAsync
from ._asyncified.management.clients import _ClientsAsync as management_clients_ClientsAsync
from ._asyncified.management.connections import _ConnectionsAsync as management_connections_ConnectionsAsync
from ._asyncified.management.custom_domains import _CustomDomainsAsync as management_custom_domains_CustomDomainsAsync
from ._asyncified.management.device_credentials import (
    _DeviceCredentialsAsync as management_device_credentials_DeviceCredentialsAsync,
)
from ._asyncified.management.email_templates import _EmailTemplatesAsync as management_email_templates_EmailTemplatesAsync
from ._asyncified.management.emails import _EmailsAsync as management_emails_EmailsAsync
from ._asyncified.management.grants import _GrantsAsync as management_grants_GrantsAsync
from ._asyncified.management.guardian import _GuardianAsync as management_guardian_GuardianAsync
from ._asyncified.management.hooks import _HooksAsync as management_hooks_HooksAsync
from ._asyncified.management.jobs import _JobsAsync as management_jobs_JobsAsync
from ._asyncified.management.log_streams import _LogStreamsAsync as management_log_streams_LogStreamsAsync
from ._asyncified.management.logs import _LogsAsync as management_logs_LogsAsync
from ._asyncified.management.organizations import _OrganizationsAsync as management_organizations_OrganizationsAsync
from ._asyncified.management.prompts import _PromptsAsync as management_prompts_PromptsAsync
from ._asyncified.management.resource_servers import _ResourceServersAsync as management_resource_servers_ResourceServersAsync
from ._asyncified.management.roles import _RolesAsync as management_roles_RolesAsync
from ._asyncified.management.rules import _RulesAsync as management_rules_RulesAsync
from ._asyncified.management.rules_configs import _RulesConfigsAsync as management_rules_configs_RulesConfigsAsync
from ._asyncified.management.stats import _StatsAsync as management_stats_StatsAsync
from ._asyncified.management.tenants import _TenantsAsync as management_tenants_TenantsAsync
from ._asyncified.management.tickets import _TicketsAsync as management_tickets_TicketsAsync
from ._asyncified.management.user_blocks import _UserBlocksAsync as management_user_blocks_UserBlocksAsync
from ._asyncified.management.users import _UsersAsync as management_users_UsersAsync
from ._asyncified.management.users_by_email import _UsersByEmailAsync as management_users_by_email_UsersByEmailAsync

_T = TypeVar("_T")

@overload
def asyncify(
    cls: type[authentication_back_channel_loginBackChannelLogin],
) -> type[authentication_back_channel_login_BackChannelLoginAsync]: ...
@overload
def asyncify(cls: type[authentication_databaseDatabase]) -> type[authentication_database_DatabaseAsync]: ...
@overload
def asyncify(cls: type[authentication_delegatedDelegated]) -> type[authentication_delegated_DelegatedAsync]: ...
@overload
def asyncify(cls: type[authentication_enterpriseEnterprise]) -> type[authentication_enterprise_EnterpriseAsync]: ...
@overload
def asyncify(cls: type[authentication_get_tokenGetToken]) -> type[authentication_get_token_GetTokenAsync]: ...
@overload
def asyncify(cls: type[authentication_passwordlessPasswordless]) -> type[authentication_passwordless_PasswordlessAsync]: ...
@overload
def asyncify(
    cls: type[authentication_pushed_authorization_requestsPushedAuthorizationRequests],
) -> type[authentication_pushed_authorization_requests_PushedAuthorizationRequestsAsync]: ...
@overload
def asyncify(cls: type[authentication_revoke_tokenRevokeToken]) -> type[authentication_revoke_token_RevokeTokenAsync]: ...
@overload
def asyncify(cls: type[authentication_socialSocial]) -> type[authentication_social_SocialAsync]: ...
@overload
def asyncify(cls: type[authentication_baseAuthenticationBase]) -> type[authentication_base_AuthenticationBaseAsync]: ...
@overload
def asyncify(cls: type[authentication_usersUsers]) -> type[authentication_users_UsersAsync]: ...
@overload
def asyncify(cls: type[management_actionsActions]) -> type[management_actions_ActionsAsync]: ...
@overload
def asyncify(
    cls: type[management_attack_protectionAttackProtection],
) -> type[management_attack_protection_AttackProtectionAsync]: ...
@overload
def asyncify(cls: type[management_blacklistsBlacklists]) -> type[management_blacklists_BlacklistsAsync]: ...
@overload
def asyncify(cls: type[management_brandingBranding]) -> type[management_branding_BrandingAsync]: ...
@overload
def asyncify(cls: type[management_clientsClients]) -> type[management_clients_ClientsAsync]: ...
@overload
def asyncify(
    cls: type[management_client_credentialsClientCredentials],
) -> type[management_client_credentials_ClientCredentialsAsync]: ...
@overload
def asyncify(cls: type[management_client_grantsClientGrants]) -> type[management_client_grants_ClientGrantsAsync]: ...
@overload
def asyncify(cls: type[management_connectionsConnections]) -> type[management_connections_ConnectionsAsync]: ...
@overload
def asyncify(cls: type[management_custom_domainsCustomDomains]) -> type[management_custom_domains_CustomDomainsAsync]: ...
@overload
def asyncify(
    cls: type[management_device_credentialsDeviceCredentials],
) -> type[management_device_credentials_DeviceCredentialsAsync]: ...
@overload
def asyncify(cls: type[management_emailsEmails]) -> type[management_emails_EmailsAsync]: ...
@overload
def asyncify(cls: type[management_email_templatesEmailTemplates]) -> type[management_email_templates_EmailTemplatesAsync]: ...
@overload
def asyncify(cls: type[management_grantsGrants]) -> type[management_grants_GrantsAsync]: ...
@overload
def asyncify(cls: type[management_guardianGuardian]) -> type[management_guardian_GuardianAsync]: ...
@overload
def asyncify(cls: type[management_hooksHooks]) -> type[management_hooks_HooksAsync]: ...
@overload
def asyncify(cls: type[management_jobsJobs]) -> type[management_jobs_JobsAsync]: ...
@overload
def asyncify(cls: type[management_logsLogs]) -> type[management_logs_LogsAsync]: ...
@overload
def asyncify(cls: type[management_log_streamsLogStreams]) -> type[management_log_streams_LogStreamsAsync]: ...
@overload
def asyncify(cls: type[management_organizationsOrganizations]) -> type[management_organizations_OrganizationsAsync]: ...
@overload
def asyncify(cls: type[management_promptsPrompts]) -> type[management_prompts_PromptsAsync]: ...
@overload
def asyncify(cls: type[management_resource_serversResourceServers]) -> type[management_resource_servers_ResourceServersAsync]: ...
@overload
def asyncify(cls: type[management_rolesRoles]) -> type[management_roles_RolesAsync]: ...
@overload
def asyncify(cls: type[management_rulesRules]) -> type[management_rules_RulesAsync]: ...
@overload
def asyncify(cls: type[management_rules_configsRulesConfigs]) -> type[management_rules_configs_RulesConfigsAsync]: ...
@overload
def asyncify(cls: type[management_statsStats]) -> type[management_stats_StatsAsync]: ...
@overload
def asyncify(cls: type[management_tenantsTenants]) -> type[management_tenants_TenantsAsync]: ...
@overload
def asyncify(cls: type[management_ticketsTickets]) -> type[management_tickets_TicketsAsync]: ...
@overload
def asyncify(cls: type[management_usersUsers]) -> type[management_users_UsersAsync]: ...
@overload
def asyncify(cls: type[management_users_by_emailUsersByEmail]) -> type[management_users_by_email_UsersByEmailAsync]: ...
@overload
def asyncify(cls: type[management_user_blocksUserBlocks]) -> type[management_user_blocks_UserBlocksAsync]: ...
@overload
def asyncify(cls: type[_T]) -> type[_T]: ...
