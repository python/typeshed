from _typeshed import Incomplete
from typing import Any

from ..rest import RestClient as RestClient, RestClientOptions as RestClientOptions
from ..types import TimeoutType as TimeoutType

class CustomDomains:
    domain: Incomplete
    protocol: Incomplete
    client: Incomplete
    def __init__(
        self,
        domain: str,
        token: str,
        telemetry: bool = True,
        timeout: TimeoutType = 5.0,
        protocol: str = "https",
        rest_options: RestClientOptions | None = None,
    ) -> None: ...
    def all(self) -> list[dict[str, Any]]: ...
    async def all_async(self) -> list[dict[str, Any]]: ...
    def get(self, id: str) -> dict[str, Any]: ...
    async def get_async(self, id: str) -> dict[str, Any]: ...
    def delete(self, id: str) -> Any: ...
    async def delete_async(self, id: str) -> Any: ...
    def create_new(self, body: dict[str, Any]) -> dict[str, Any]: ...
    async def create_new_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    def verify(self, id: str) -> dict[str, Any]: ...
    async def verify_async(self, id: str) -> dict[str, Any]: ...
