# AUTOGENERATED BY scripts/sync_auth0_python.py
from typing import Any, type_check_only

from auth0.management.organizations import Organizations

@type_check_only
class _OrganizationsAsync(Organizations):
    async def all_organizations_async(
        self,
        page: int | None = None,
        per_page: int | None = None,
        include_totals: bool = True,
        from_param: str | None = None,
        take: int | None = None,
    ): ...
    async def get_organization_by_name_async(self, name: str | None = None) -> dict[str, Any]: ...
    async def get_organization_async(self, id: str) -> dict[str, Any]: ...
    async def create_organization_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    async def update_organization_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def delete_organization_async(self, id: str) -> Any: ...
    async def all_organization_connections_async(
        self, id: str, page: int | None = None, per_page: int | None = None
    ) -> list[dict[str, Any]]: ...
    async def get_organization_connection_async(self, id: str, connection_id: str) -> dict[str, Any]: ...
    async def create_organization_connection_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def update_organization_connection_async(self, id: str, connection_id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def delete_organization_connection_async(self, id: str, connection_id: str) -> Any: ...
    async def all_organization_members_async(
        self,
        id: str,
        page: int | None = None,
        per_page: int | None = None,
        include_totals: bool = True,
        from_param: str | None = None,
        take: int | None = None,
        fields: list[str] | None = None,
        include_fields: bool = True,
    ): ...
    async def create_organization_members_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def delete_organization_members_async(self, id: str, body: dict[str, Any]) -> Any: ...
    async def all_organization_member_roles_async(
        self, id: str, user_id: str, page: int | None = None, per_page: int | None = None, include_totals: bool = False
    ) -> list[dict[str, Any]]: ...
    async def create_organization_member_roles_async(self, id: str, user_id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def delete_organization_member_roles_async(self, id: str, user_id: str, body: dict[str, Any]) -> Any: ...
    async def all_organization_invitations_async(
        self, id: str, page: int | None = None, per_page: int | None = None, include_totals: bool = False
    ): ...
    async def get_organization_invitation_async(self, id: str, invitaton_id: str) -> dict[str, Any]: ...
    async def create_organization_invitation_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    async def delete_organization_invitation_async(self, id: str, invitation_id: str) -> Any: ...
    async def get_client_grants_async(
        self,
        id: str,
        audience: str | None = None,
        client_id: str | None = None,
        page: int | None = None,
        per_page: int | None = None,
        include_totals: bool = False,
    ): ...
    async def add_client_grant_async(self, id: str, grant_id: str) -> dict[str, Any]: ...
    async def delete_client_grant_async(self, id: str, grant_id: str) -> dict[str, Any]: ...
