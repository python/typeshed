from _typeshed import Incomplete
from collections.abc import Generator

default_logger: Incomplete

class BaseManager:
    logger: Incomplete
    server: Incomplete
    rooms: Incomplete
    eio_to_sid: Incomplete
    callbacks: Incomplete
    pending_disconnect: Incomplete
    def __init__(self) -> None: ...
    def set_server(self, server) -> None: ...
    def initialize(self) -> None: ...
    def get_namespaces(self): ...
    def get_participants(self, namespace, room) -> Generator[Incomplete]: ...
    def connect(self, eio_sid, namespace): ...
    def is_connected(self, sid, namespace): ...
    def sid_from_eio_sid(self, eio_sid, namespace): ...
    def eio_sid_from_sid(self, sid, namespace): ...
    def pre_disconnect(self, sid, namespace): ...
    def basic_disconnect(self, sid, namespace, **kwargs) -> None: ...
    def basic_enter_room(self, sid, namespace, room, eio_sid: Incomplete | None = None) -> None: ...
    def basic_leave_room(self, sid, namespace, room) -> None: ...
    def basic_close_room(self, room, namespace) -> None: ...
    def get_rooms(self, sid, namespace): ...
