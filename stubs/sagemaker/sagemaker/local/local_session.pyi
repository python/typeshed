from _typeshed import Incomplete

from sagemaker.session import Session

logger: Incomplete

class LocalSagemakerClient:
    sagemaker_session: Incomplete
    def __init__(self, sagemaker_session: Incomplete | None = None) -> None: ...
    def create_processing_job(
        self,
        ProcessingJobName,
        AppSpecification,
        ProcessingResources,
        Environment: Incomplete | None = None,
        ProcessingInputs: Incomplete | None = None,
        ProcessingOutputConfig: Incomplete | None = None,
        **kwargs,
    ) -> None: ...
    def describe_processing_job(self, ProcessingJobName): ...
    def create_training_job(
        self,
        TrainingJobName,
        AlgorithmSpecification,
        OutputDataConfig,
        ResourceConfig,
        InputDataConfig: Incomplete | None = None,
        Environment: Incomplete | None = None,
        **kwargs,
    ) -> None: ...
    def describe_training_job(self, TrainingJobName): ...
    def create_transform_job(
        self, TransformJobName, ModelName, TransformInput, TransformOutput, TransformResources, **kwargs
    ) -> None: ...
    def describe_transform_job(self, TransformJobName): ...
    def create_model(self, ModelName, PrimaryContainer, *args, **kwargs) -> None: ...
    def describe_model(self, ModelName): ...
    def describe_endpoint_config(self, EndpointConfigName): ...
    def create_endpoint_config(self, EndpointConfigName, ProductionVariants, Tags: Incomplete | None = None) -> None: ...
    def describe_endpoint(self, EndpointName): ...
    def create_endpoint(self, EndpointName, EndpointConfigName, Tags: Incomplete | None = None) -> None: ...
    def update_endpoint(self, EndpointName, EndpointConfigName) -> None: ...
    def delete_endpoint(self, EndpointName) -> None: ...
    def delete_endpoint_config(self, EndpointConfigName) -> None: ...
    def delete_model(self, ModelName) -> None: ...
    def create_pipeline(self, pipeline, pipeline_description, **kwargs): ...
    def update_pipeline(self, pipeline, pipeline_description, **kwargs): ...
    def describe_pipeline(self, PipelineName): ...
    def delete_pipeline(self, PipelineName): ...
    def start_pipeline_execution(self, PipelineName, **kwargs): ...

class LocalSagemakerRuntimeClient:
    http: Incomplete
    serving_port: int
    config: Incomplete
    def __init__(self, config: Incomplete | None = None) -> None: ...
    def invoke_endpoint(
        self,
        Body,
        EndpointName,
        ContentType: Incomplete | None = None,
        Accept: Incomplete | None = None,
        CustomAttributes: Incomplete | None = None,
        TargetModel: Incomplete | None = None,
        TargetVariant: Incomplete | None = None,
        InferenceId: Incomplete | None = None,
    ): ...

class LocalSession(Session):
    s3_endpoint_url: Incomplete
    def __init__(
        self,
        boto_session: Incomplete | None = None,
        default_bucket: Incomplete | None = None,
        s3_endpoint_url: Incomplete | None = None,
        disable_local_code: bool = False,
        sagemaker_config: dict | None = None,
        default_bucket_prefix: Incomplete | None = None,
    ) -> None: ...
    def logs_for_job(self, job_name, wait: bool = False, poll: int = 5, log_type: str = "All") -> None: ...
    def logs_for_processing_job(self, job_name, wait: bool = False, poll: int = 10) -> None: ...

class file_input:
    config: Incomplete
    def __init__(self, fileUri, content_type: Incomplete | None = None) -> None: ...
