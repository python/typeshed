import unittest
from typing import Any

from commonmark.blocks import Parser as Parser
from commonmark.inlines import InlineParser as InlineParser
from commonmark.node import Node as Node, NodeWalker as NodeWalker
from commonmark.render.html import HtmlRenderer as HtmlRenderer
from hypothesis import given

example = given

class TestCommonmark(unittest.TestCase):
    def test_output(self) -> None: ...
    def test_unicode(self) -> None: ...
    def test_null_string_bug(self) -> None: ...
    def test_normalize_contracts_text_nodes(self) -> None: ...
    def test_dumpAST_orderedlist(self) -> None: ...
    def test_random_text(self, s) -> None: ...
    def test_smart_dashes(self) -> None: ...
    def test_regex_vulnerability_link_label(self) -> None: ...
    def test_regex_vulnerability_link_destination(self) -> None: ...

class TestHtmlRenderer(unittest.TestCase):
    def test_init(self) -> None: ...

class TestInlineParser(unittest.TestCase):
    def test_init(self) -> None: ...

class TestNode(unittest.TestCase):
    def test_doc_node(self) -> None: ...

class TestNodeWalker(unittest.TestCase):
    def test_node_walker(self) -> None: ...
    def test_node_walker_iter(self) -> None: ...

class TestParser(unittest.TestCase):
    parser: Any
    def setUp(self) -> None: ...
    def test_text(self, s) -> None: ...
