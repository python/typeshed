from typing import Any, Optional

class QueryIterator:
    def __iter__(self) -> Any: ...
    def has_next(self) -> None: ...
    def has_next_async(self) -> None: ...
    def probably_has_next(self) -> None: ...
    def next(self) -> None: ...
    def cursor_before(self) -> None: ...
    def cursor_after(self) -> None: ...
    def index_list(self) -> None: ...

class Cursor:
    @classmethod
    def from_websafe_string(cls, urlsafe: Any): ...
    cursor: Any = ...
    def __init__(self, cursor: Optional[Any] = ..., urlsafe: Optional[Any] = ...) -> None: ...
    def to_websafe_string(self): ...
    def urlsafe(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...
