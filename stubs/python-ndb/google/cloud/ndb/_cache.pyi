from typing import Any, Dict, Optional

class ContextCache(Dict[Any, Any]):
    def get_and_validate(self, key: Any): ...

def global_get(key: Any): ...
def global_set(key: Any, value: Any, expires: Optional[Any] = ..., read: bool = ...): ...
def global_delete(key: Any): ...
def global_watch(key: Any): ...
def global_unwatch(key: Any): ...
def global_compare_and_swap(key: Any, value: Any, expires: Optional[Any] = ...): ...
def global_lock(key: Any, read: bool = ...): ...
def is_locked_value(value: Any): ...
def global_cache_key(key: Any): ...
