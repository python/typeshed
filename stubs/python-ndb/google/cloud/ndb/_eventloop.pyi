from typing import Any, NamedTuple

class _Event(NamedTuple):
    when: Any
    callback: Any
    args: Any
    kwargs: Any

class EventLoop:
    current: Any = ...
    idlers: Any = ...
    inactive: int = ...
    queue: Any = ...
    rpcs: Any = ...
    rpc_results: Any = ...
    def __init__(self) -> None: ...
    def clear(self) -> None: ...
    def insort_event_right(self, event: _Event) -> None: ...
    def call_soon(self, callback: Any, *args: Any, **kwargs: Any) -> None: ...
    def queue_call(self, delay: Any, callback: Any, *args: Any, **kwargs: Any) -> None: ...
    def queue_rpc(self, rpc: Any, callback: Any) -> None: ...
    def add_idle(self, callback: Any, *args: Any, **kwargs: Any) -> None: ...
    def run_idle(self): ...
    def run0(self): ...
    def run1(self): ...
    def run(self) -> None: ...
