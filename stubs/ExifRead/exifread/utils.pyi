from _typeshed import Incomplete
from fractions import Fraction
from typing import Union

def ord_(dta): ...
def make_string(seq: Union[bytes, list]) -> str: ...
def make_string_uc(seq) -> str: ...
def get_gps_coords(tags: dict) -> tuple: ...

class Ratio(Fraction):
    def __new__(cls, numerator: int = ..., denominator: Incomplete | None = ...): ...
    @property
    def num(self): ...
    @property
    def den(self): ...
    def decimal(self) -> float: ...
