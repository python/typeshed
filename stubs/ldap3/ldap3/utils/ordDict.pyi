from typing import Any
from UserDict import DictMixin

class OrderedDict(dict, DictMixin):
    def __init__(self, *args, **kwds) -> None: ...
    def clear(self) -> None: ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __iter__(self): ...
    def __reversed__(self) -> None: ...
    def popitem(self, last: bool = ...): ...
    def __reduce__(self): ...
    def keys(self): ...
    setdefault: Any
    update: Any
    pop: Any
    values: Any
    items: Any
    iterkeys: Any
    itervalues: Any
    iteritems: Any
    def copy(self): ...
    @classmethod
    def fromkeys(cls, iterable, value: Any | None = ...): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
