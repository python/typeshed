from logging import Logger
from typing import Any

import httpx
from authlib.integrations.base_client.sync_app import OAuth1Base, OAuth2Base

log: Logger

__all__ = ["AsyncOAuth1Mixin", "AsyncOAuth2Mixin"]

class AsyncOAuth1Mixin(OAuth1Base):
    async def request(self, method: str, url: str, token: dict[str, Any] | None = None, **kwargs: Any) -> httpx.Response: ...
    async def create_authorization_url(self, redirect_uri: str | None = None, **kwargs: Any) -> dict[str, Any]: ...
    async def fetch_access_token(self, request_token: dict[str, Any] | None = None, **kwargs: Any) -> dict[str, Any]: ...

class AsyncOAuth2Mixin(OAuth2Base):
    async def load_server_metadata(self) -> dict[str, Any]: ...
    async def request(self, method: str, url: str, token: dict[str, Any] | None = None, **kwargs: Any) -> httpx.Response: ...
    async def create_authorization_url(self, redirect_uri: str | None = None, **kwargs: Any) -> dict[str, Any]: ...
    async def fetch_access_token(self, redirect_uri: str | None = None, **kwargs: Any) -> dict[str, Any]: ...
