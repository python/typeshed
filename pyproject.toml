[tool.black]
line_length = 130
target_version = ["py310"]
skip_magic_trailing_comma = true
# Exclude protobuf files because they have long line lengths
# Ideally, we could configure Black to allow longer line lengths
# for just these files, but doesn't seem possible yet.
force-exclude = ".*_pb2.pyi"

[tool.ruff]
line-length = 130
# Oldest supported Python version
target-version = "py38"
fix = true
exclude = [
    # virtual environment
    ".env",
    ".venv",
    "env",
    # cache directories, etc.:
    ".git",
    ".mypy_cache",
    ".pytype",
]

[tool.ruff.lint]
# We still use flake8-pyi and flake8-noqa to check these (see .flake8 config file)
external = ["F821", "NQA", "Y"]
extend-select = [
    "B", # flake8-bugbear
    "FA", # flake8-future-annotations
    "I", # isort
    "RUF", # Ruff-specific and unused-noqa
    "UP", # pyupgrade
    # PYI: only enable rules that always autofix, avoids duplicate # noqa with flake8-pyi
    # See https://github.com/plinss/flake8-noqa/issues/22
    "PYI009", # use `...`, not `pass`, in empty class bodies
    "PYI010", # function bodies must be empty
    "PYI012", # class bodies must not contain `pass`
    "PYI013", # non-empty class bodies must not contain `...`
    "PYI016", # duplicate union member
    "PYI020", # quoted annotations are always unnecessary in stubs
    "PYI025", # always alias `collections.abc.Set` as `AbstractSet` when importing it
    "PYI032", # use `object`, not `Any`, as the second parameter to `__eq__`
    "PYI055", # multiple `type[T]` usages in a union
    "PYI058", # use `Iterator` as the return type for `__iter__` methods
]
ignore = [
    ###
    # Rules we don't want or don't agree with
    ###
    # We like explicit open modes
    "UP015", # redundant-open-modes
    # Used for direct, non-sublcass type comparison, for example: `type(val) is str`
    # see https://github.com/astral-sh/ruff/issues/6465
    "E721", # Do not compare types, use `isinstance()`
    ###
    # False-positives, but already checked by type-checkers
    ###
    # Ruff doesn't support multi-file analysis yet: https://github.com/astral-sh/ruff/issues/5295
    "RUF013", # PEP 484 prohibits implicit `Optional`
]

[tool.ruff.lint.extend-per-file-ignores]
# Generated protobuf files:
"*_pb2.pyi" = [
    "UP036", # outdated-version-block
]
"*.pyi" = [
    # Rules that are out of the control of stub authors:
    "B006", # Do not use mutable data structures for argument defaults
    "E501", # Line too long
    "E741", # ambiguous variable name
    "F403", # `from . import *` used; unable to detect undefined names
    # False positives in stubs
    "F821", # Undefined name: https://github.com/astral-sh/ruff/issues/3011
    # FIXME: Fix these in stubs, then remove these entries
    "F405", # may be undefined, or defined from star imports
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports = true
extra-standard-library = [
    "_typeshed",
    "typing_extensions",
    # Extra modules not recognized by Ruff/isort
    "_ast",
    "_bisect",
    "_bootlocale",
    "_codecs",
    "_collections_abc",
    "_compat_pickle",
    "_compression",
    "_csv",
    "_ctypes",
    "_curses",
    "_decimal",
    "_dummy_thread",
    "_dummy_threading",
    "_heapq",
    "_imp",
    "_json",
    "_locale",
    "_lsprof",
    "_markupbase",
    "_msi",
    "_operator",
    "_osx_support",
    "_posixsubprocess",
    "_py_abc",
    "_pydecimal",
    "_random",
    "_sitebuiltins",
    "_socket",
    "_stat",
    "_thread",
    "_threading_local",
    "_tkinter",
    "_tracemalloc",
    "_warnings",
    "_weakref",
    "_weakrefset",
    "_winapi",
    "genericpath",
    "opcode",
    "pyexpat",
]
known-first-party = ["parse_metadata", "utils"]

[tool.typeshed]
pyright_version = "1.1.342"
oldest_supported_python = "3.8"
